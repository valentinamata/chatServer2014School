package presentation;

import control.Controller;
import entity.Client;
import entity.Employee;
import entity.Field;
import entity.Reservation;
import entity.Room;
import entity.Sport;
import entity.SportBooking;
import entity.SportInstructor;
import entity.User;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

public class Casablanca extends javax.swing.JFrame {

    private Controller control;
    private int addingGuests;
    private int actualNumberOfGuests;
    private int wasTheGuestInTheHotelBefore;
    private int isSecondaryClientFormalClient;
    private boolean firstGuest = false;
    private Object[][] twoDimensionalArrayForTables;
    private String[] stringArrayforTables;
    //Saving information for e-mail.
    private ArrayList<Client> clientsInfoForEmailsAL;
    private ArrayList<User> clientaccountsForEmailsAL;
    Reservation reservationForEmails;

    public Casablanca() {
        control = new Controller();

        initComponents();
        this.setLocationRelativeTo(null);

        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run() {
                control.shutdownConnection();
            }
        });

        wasTheGuestInTheHotelBefore = 0;
        isSecondaryClientFormalClient = 0;
        clientsInfoForEmailsAL = new ArrayList<>();
        clientaccountsForEmailsAL = new ArrayList<>();
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneSportBookingGuest.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jLayeredPaneMain.setVisible(true);
        jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod.setEnabled(false); //Rooms logic
        jMenuClientsRequests.setEnabled(false);
        jMenuHotelAdministration.setEnabled(false);
        jMenuFacilitiesAdministration.setEnabled(false);
        jMenuSportBooking.setEnabled(false);
    }

    class CustomModel extends AbstractTableModel {

        private Object[][] result;
        private String[] columnNames;

        public CustomModel(Object[][] result, String[] columnNames) {
            this.result = result;
            this.columnNames = columnNames;
        }

        @Override
        public int getRowCount() {
            return result.length;
        }

        @Override
        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public String getColumnName(int col) {
            return columnNames[col];
        }

        @Override
        public Object getValueAt(int i, int i1) {
            return result[i][i1];
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPaneNewReservation = new javax.swing.JLayeredPane();
        jButtonAddReservation = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSurname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldPassport = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxCountry = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxEmail = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldAgency = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxRoomType = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListRooms = new javax.swing.JList();
        jLabel12 = new javax.swing.JLabel();
        jSpinnerStayingPeriod = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jComboBoxGuestsNumber = new javax.swing.JComboBox();
        jButtonReservationDone = new javax.swing.JButton();
        jCheckBoxDepositPayed = new javax.swing.JCheckBox();
        jButtonCheckPassport = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jLayeredPaneReservations = new javax.swing.JLayeredPane();
        jLabel15 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldReservationID = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jTextFieldClientIDReservation = new javax.swing.JTextField();
        jTextFieldRoomReservation = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButtonChangeReservation = new javax.swing.JButton();
        jCheckBoxDepositPayedUpdate = new javax.swing.JCheckBox();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableReservations = new javax.swing.JTable();
        jLabelErrorMessageReservation = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jButtonDeleteReservation = new javax.swing.JButton();
        jLayeredPaneShowingGuestInformation = new javax.swing.JLayeredPane();
        jLabel16 = new javax.swing.JLabel();
        jButtonShowGuestInfo = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldNewName = new javax.swing.JTextField();
        jTextFieldNewSurname = new javax.swing.JTextField();
        jTextFieldNewAddress = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jTextFieldNewEmail = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldNewPassport = new javax.swing.JTextField();
        jTextFieldNewCountry = new javax.swing.JTextField();
        jTextFieldNewPhone = new javax.swing.JTextField();
        jTextFieldNewAgency = new javax.swing.JTextField();
        jButtonUpdateClient = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldClientID = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableClients = new javax.swing.JTable();
        jComboBoxPassports = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxChangeEmailClient = new javax.swing.JComboBox();
        jLayeredPaneFreeRooms = new javax.swing.JLayeredPane();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListFreeRooms = new javax.swing.JList();
        jComboBoxRoomTypeChooser = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod = new javax.swing.JButton();
        jLayeredPaneFields = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSportFields = new javax.swing.JTable();
        jTextFieldFieldNo = new javax.swing.JTextField();
        jLabelFieldNo = new javax.swing.JLabel();
        jLabelFieldName = new javax.swing.JLabel();
        jButtonFieldExecute = new javax.swing.JButton();
        jComboBoxSportNameInjMenuItemField = new javax.swing.JComboBox();
        jButtonFieldCreation = new javax.swing.JButton();
        jButtonFieldUpdating = new javax.swing.JButton();
        jButtonFieldDeletion = new javax.swing.JButton();
        jTextFieldFieldNewName = new javax.swing.JTextField();
        jComboBoxFieldsNo = new javax.swing.JComboBox();
        jLayeredPaneSports = new javax.swing.JLayeredPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableActualSports = new javax.swing.JTable();
        jButtonSportCreation = new javax.swing.JButton();
        jButtonSportUpdating = new javax.swing.JButton();
        jButtonSportDeletion = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabelAdditionalInfo = new javax.swing.JLabel();
        jTextFieldSportName = new javax.swing.JTextField();
        jTextFieldSportInstructorPrice = new javax.swing.JTextField();
        jButtonSportExecute = new javax.swing.JButton();
        jComboBoxSportName = new javax.swing.JComboBox();
        jComboBoxSportInstructorPrice = new javax.swing.JComboBox();
        jTextFieldSportMinPPL = new javax.swing.JTextField();
        jTextFieldSportMaxPPL = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jLayeredPaneEmployee = new javax.swing.JLayeredPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableEmployee = new javax.swing.JTable();
        jButtonEmployeeCreation = new javax.swing.JButton();
        jButtonEmployeeUpdating = new javax.swing.JButton();
        jButtonEmployeeDeletion = new javax.swing.JButton();
        jTextFieldEmployeeNo = new javax.swing.JTextField();
        jTextFieldEmployeeName = new javax.swing.JTextField();
        jTextFieldEmployeePosition = new javax.swing.JTextField();
        jLabeEmployeeNo = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jButtonEmployeeExecute = new javax.swing.JButton();
        jComboBoxEmployeeNo = new javax.swing.JComboBox();
        jComboBoxEmployeePosition = new javax.swing.JComboBox();
        jLayeredPaneSportBooking = new javax.swing.JLayeredPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableSportBooking = new javax.swing.JTable();
        jButtonSportBookingCreation = new javax.swing.JButton();
        jButtonSportBookingUpdate = new javax.swing.JButton();
        jButtonSportBookingDelete = new javax.swing.JButton();
        jTextFieldSportBookingBookingNo = new javax.swing.JTextField();
        jTextFieldSportBookingClientNo = new javax.swing.JTextField();
        jTextFieldSportBookingFieldNo = new javax.swing.JTextField();
        jTextFieldSportBookingBookingHour = new javax.swing.JTextField();
        jLabelSportBookingNo = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jButtonSportBookingExecute = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jTextFieldSportBookingInstructorNo = new javax.swing.JTextField();
        jComboBoxSportBookingClientNo = new javax.swing.JComboBox();
        jComboBoxSportBookingFieldNo = new javax.swing.JComboBox();
        jComboBoxBookingHour = new javax.swing.JComboBox();
        jComboBoxSportBookingInstructorNo = new javax.swing.JComboBox();
        jComboBoxSportBookingBookingNo = new javax.swing.JComboBox();
        jLayeredPaneMain = new javax.swing.JLayeredPane();
        jButtonLogIn = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        jLayeredPaneSportInstructor = new javax.swing.JLayeredPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableSportInstructor = new javax.swing.JTable();
        jButtonSportInstructorCreate = new javax.swing.JButton();
        jButtonSportInstructorUpdate = new javax.swing.JButton();
        jButtonSportInstructorDelete = new javax.swing.JButton();
        jTextFieldSportInstructorEmployeeNo = new javax.swing.JTextField();
        jTextFieldSportInstructorSportName = new javax.swing.JTextField();
        jLabelEmployeeNo1 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jButtonSportInstructorExecute = new javax.swing.JButton();
        jComboBoxSportInstructorEmployeeNo = new javax.swing.JComboBox();
        jComboBoxSportInstructorSportName = new javax.swing.JComboBox();
        jTextFieldSportInstructorSequence = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jComboBoxSportInstructorSequence = new javax.swing.JComboBox();
        jLayeredPaneSportBookingGuest = new javax.swing.JLayeredPane();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTableSportBookingForClient = new javax.swing.JTable();
        jButtonCreateBookingByClient = new javax.swing.JButton();
        jButtonUpdateBookingByClient = new javax.swing.JButton();
        jButtonDeleteBookingByClient = new javax.swing.JButton();
        jLabelBookingNoSportBookingByClient = new javax.swing.JLabel();
        jComboBoxBookingNoSportBookingByClients = new javax.swing.JComboBox();
        jTextFieldBookingNoSportBookingByClient = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jTextFieldClientNoSportBookingByClient = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jComboBoxFieldNoSportBookingByClient = new javax.swing.JComboBox();
        jTextFieldFieldNoSportBookingByClient = new javax.swing.JTextField();
        jButtonExecuteSportBookingByClient = new javax.swing.JButton();
        jLabel64 = new javax.swing.JLabel();
        jComboBoxInstructorNoSportBookingByClient = new javax.swing.JComboBox();
        jTextFieldInstructorNoSportBookingByClient = new javax.swing.JTextField();
        jTextFieldBookingHourSportBookingByClient = new javax.swing.JTextField();
        jComboBoxBookingHourSportBookingByClient = new javax.swing.JComboBox();
        jLabel63 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLayeredPaneAccounts = new javax.swing.JLayeredPane();
        jLabel51 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableEmployeesAccounts = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTableGuestsAccounts = new javax.swing.JTable();
        jTextFieldUsername = new javax.swing.JTextField();
        jTextFieldPassword = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jComboBoxAccountType = new javax.swing.JComboBox();
        jLabel55 = new javax.swing.JLabel();
        jTextFieldAccountManagementID = new javax.swing.JTextField();
        jButtonAccountManagementCreate = new javax.swing.JButton();
        jButtonAccountManagementDelete = new javax.swing.JButton();
        jButtonAccountManagementExecute = new javax.swing.JButton();
        jComboBoxAccountManagementID = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuHome = new javax.swing.JMenu();
        jMenuClientsRequests = new javax.swing.JMenu();
        jMenuItemNewReservation = new javax.swing.JMenuItem();
        jMenuItemSportBooking = new javax.swing.JMenuItem();
        jMenuHotelAdministration = new javax.swing.JMenu();
        jMenuItemReservation = new javax.swing.JMenuItem();
        jMenuItemClientInformation = new javax.swing.JMenuItem();
        jMenuItemFreeRooms = new javax.swing.JMenuItem();
        jMenuItemAccounts = new javax.swing.JMenuItem();
        jMenuFacilitiesAdministration = new javax.swing.JMenu();
        jMenuItemFields = new javax.swing.JMenuItem();
        jMenuItemSports = new javax.swing.JMenuItem();
        jMenuItemEmployee = new javax.swing.JMenuItem();
        jMenuItemSportInstructor = new javax.swing.JMenuItem();
        jMenuSportBooking = new javax.swing.JMenu();
        jMenuItemSportBookingClient = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Casablanca HalaDinmaDafaka");
        setResizable(false);

        jLayeredPaneNewReservation.setPreferredSize(new java.awt.Dimension(480, 350));

        jButtonAddReservation.setText("Add");
        jButtonAddReservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddReservationMouseClicked(evt);
            }
        });
        jButtonAddReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddReservationActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Surname:");

        jTextFieldSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSurnameActionPerformed(evt);
            }
        });

        jLabel3.setText("Address:");

        jLabel4.setText("PassportNo:");

        jLabel5.setText("Country:");

        jComboBoxCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Denmark", "Bulgaria", "Romania" }));
        jComboBoxCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCountryActionPerformed(evt);
            }
        });

        jLabel6.setText("Phone:");

        jLabel7.setText("E-mail:");

        jLabel11.setText("@");

        jComboBoxEmail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "gmail.com", "yahoo.com", "abv.bg" }));

        jLabel8.setText("Agency:");

        jLabel10.setText("Type:");

        jComboBoxRoomType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single Room", "Double Room", "Family Room" }));
        jComboBoxRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRoomTypeActionPerformed(evt);
            }
        });

        jLabel13.setText("Rooms:");

        jListRooms.setModel(freerooms);
        jScrollPane1.setViewportView(jListRooms);

        jLabel12.setText("Arrival Date:");

        jSpinnerStayingPeriod.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabel9.setText("Staying period:");

        jLabel21.setText("Guests:");

        jComboBoxGuestsNumber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));
        jComboBoxGuestsNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGuestsNumberActionPerformed(evt);
            }
        });

        jButtonReservationDone.setText("Done");
        jButtonReservationDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReservationDoneActionPerformed(evt);
            }
        });

        jCheckBoxDepositPayed.setText("Deposit Payed");

        jButtonCheckPassport.setText("Check");
        jButtonCheckPassport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCheckPassportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneNewReservationLayout = new javax.swing.GroupLayout(jLayeredPaneNewReservation);
        jLayeredPaneNewReservation.setLayout(jLayeredPaneNewReservationLayout);
        jLayeredPaneNewReservationLayout.setHorizontalGroup(
            jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9)
                            .addComponent(jButtonAddReservation)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextFieldAgency, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneNewReservationLayout.createSequentialGroup()
                                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jComboBoxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextFieldPassport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                            .addComponent(jTextFieldAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldSurname, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonCheckPassport))
                                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                                        .addComponent(jComboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBoxRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addGap(27, 27, 27)
                                        .addComponent(jComboBoxGuestsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(64, 64, 64))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jCheckBoxDepositPayed)
                                        .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(18, 18, 18)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jButtonReservationDone))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneNewReservationLayout.createSequentialGroup()
                                .addComponent(jSpinnerStayingPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(27, 27, 27))
                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())))
        );
        jLayeredPaneNewReservationLayout.setVerticalGroup(
            jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneNewReservationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldPassport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCheckPassport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBoxEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldAgency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jComboBoxGuestsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerStayingPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jCheckBoxDepositPayed))
                .addGap(30, 30, 30)
                .addGroup(jLayeredPaneNewReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneNewReservationLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButtonAddReservation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonReservationDone))
                .addGap(53, 53, 53))
        );
        jLayeredPaneNewReservation.setLayer(jButtonAddReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldSurname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldPassport, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jComboBoxCountry, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldPhone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jComboBoxEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jTextFieldAgency, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jComboBoxRoomType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jSpinnerStayingPeriod, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jComboBoxGuestsNumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jButtonReservationDone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jCheckBoxDepositPayed, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jButtonCheckPassport, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneNewReservation.setLayer(jLabel41, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneReservations.setPreferredSize(new java.awt.Dimension(480, 350));

        jLabel15.setText("List of Reservations:");

        jLabel31.setText("Change Information of Selected Reservation:");

        jLabel32.setText("ReservationID:");

        jLabel33.setText("Arrival:");

        jLabel34.setText("RegisteredUser:");

        jLabel35.setText("Room:");

        jLabel17.setText("Departure:");

        jButtonChangeReservation.setText("Change");
        jButtonChangeReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeReservationActionPerformed(evt);
            }
        });

        jCheckBoxDepositPayedUpdate.setText("Deposit Payed");

        jTableReservations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableReservationsMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(jTableReservations);

        jLabel57.setText("Reservation Date:");

        jButtonDeleteReservation.setText("Delete");
        jButtonDeleteReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteReservationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneReservationsLayout = new javax.swing.GroupLayout(jLayeredPaneReservations);
        jLayeredPaneReservations.setLayout(jLayeredPaneReservationsLayout);
        jLayeredPaneReservationsLayout.setHorizontalGroup(
            jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane10))
                    .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel57))
                                        .addGap(43, 43, 43))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneReservationsLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel35)
                                        .addGap(51, 51, 51)
                                        .addComponent(jTextFieldRoomReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel34)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldClientIDReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelErrorMessageReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButtonChangeReservation)
                                        .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addGap(343, 343, 343))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDeleteReservation)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneReservationsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jCheckBoxDepositPayedUpdate)
                .addGap(105, 105, 105))
        );
        jLayeredPaneReservationsLayout.setVerticalGroup(
            jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneReservationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldReservationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jButtonChangeReservation)
                    .addComponent(jButtonDeleteReservation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jTextFieldClientIDReservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneReservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel35)
                    .addComponent(jTextFieldRoomReservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxDepositPayedUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelErrorMessageReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jLayeredPaneReservations.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel31, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jTextFieldReservationID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel32, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel33, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jTextFieldClientIDReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jTextFieldRoomReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel34, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel35, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jButtonChangeReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jCheckBoxDepositPayedUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jScrollPane10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabelErrorMessageReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jLabel57, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneReservations.setLayer(jButtonDeleteReservation, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneShowingGuestInformation.setPreferredSize(new java.awt.Dimension(480, 350));

        jLabel16.setText("Choose Passport:");

        jButtonShowGuestInfo.setText("Show");
        jButtonShowGuestInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowGuestInfoActionPerformed(evt);
            }
        });

        jLabel22.setText("Name:");

        jLabel23.setText("Surname:");

        jLabel24.setText("Address:");

        jLabel25.setText("Passport:");

        jLabel26.setText("Country:");

        jLabel27.setText("Phone:");

        jLabel28.setText("E-mail:");

        jLabel29.setText("Agency:");

        jButtonUpdateClient.setText("Change");
        jButtonUpdateClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateClientActionPerformed(evt);
            }
        });

        jLabel30.setText("ID:");

        jTableClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientsMouseClicked(evt);
                yo(evt);
            }
        });
        jScrollPane9.setViewportView(jTableClients);

        jLabel14.setText("@");

        jComboBoxChangeEmailClient.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "gmail.com", "yahoo.com", "abv.bg" }));

        javax.swing.GroupLayout jLayeredPaneShowingGuestInformationLayout = new javax.swing.GroupLayout(jLayeredPaneShowingGuestInformation);
        jLayeredPaneShowingGuestInformation.setLayout(jLayeredPaneShowingGuestInformationLayout);
        jLayeredPaneShowingGuestInformationLayout.setHorizontalGroup(
            jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPassports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonShowGuestInfo)
                .addGap(157, 157, 157))
            .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(jTextFieldNewSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                                .addComponent(jTextFieldNewEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14))
                            .addComponent(jTextFieldNewAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldNewPassport, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldNewCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldNewPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldNewAgency, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jComboBoxChangeEmailClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonUpdateClient)))
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9)
                .addContainerGap())
        );
        jLayeredPaneShowingGuestInformationLayout.setVerticalGroup(
            jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneShowingGuestInformationLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jButtonShowGuestInfo)
                    .addComponent(jComboBoxPassports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextFieldClientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jTextFieldNewPassport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextFieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(jTextFieldNewCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextFieldNewSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jTextFieldNewPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextFieldNewAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jTextFieldNewAgency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneShowingGuestInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jTextFieldNewEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUpdateClient)
                    .addComponent(jLabel14)
                    .addComponent(jComboBoxChangeEmailClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jLayeredPaneShowingGuestInformation.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jButtonShowGuestInfo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewSurname, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewAddress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel25, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel26, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel27, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel28, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel29, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewPassport, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewCountry, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewPhone, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldNewAgency, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jButtonUpdateClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel30, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jTextFieldClientID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jScrollPane9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jComboBoxPassports, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneShowingGuestInformation.setLayer(jComboBoxChangeEmailClient, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneFreeRooms.setPreferredSize(new java.awt.Dimension(480, 350));

        jLabel18.setText("Check If Rooms are free on a particular date:");

        jListFreeRooms.setModel(freerooms);
        jScrollPane5.setViewportView(jListFreeRooms);

        jComboBoxRoomTypeChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Single Room", "Double Room", "Family Room" }));
        jComboBoxRoomTypeChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRoomTypeChooserActionPerformed(evt);
            }
        });

        jLabel19.setText("Type:");

        jLabel20.setText("Your rooms :)");

        jLabel37.setText("Arrival:");

        jLabel40.setText("Departure:");

        jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod.setText("New Reservation");
        jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneFreeRoomsLayout = new javax.swing.GroupLayout(jLayeredPaneFreeRooms);
        jLayeredPaneFreeRooms.setLayout(jLayeredPaneFreeRoomsLayout);
        jLayeredPaneFreeRoomsLayout.setHorizontalGroup(
            jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneFreeRoomsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addGroup(jLayeredPaneFreeRoomsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPaneFreeRoomsLayout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneFreeRoomsLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxRoomTypeChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneFreeRoomsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod)
                .addGap(187, 187, 187))
        );
        jLayeredPaneFreeRoomsLayout.setVerticalGroup(
            jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneFreeRoomsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneFreeRoomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRoomTypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod)
                .addGap(32, 32, 32))
        );
        jLayeredPaneFreeRooms.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jComboBoxRoomTypeChooser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jLabel37, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jLabel40, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFreeRooms.setLayer(jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableSportFields.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSportFieldsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableSportFields);

        jTextFieldFieldNo.setEditable(false);

        jLabelFieldNo.setText("Field no:");

        jLabelFieldName.setText("Sport name:");

        jButtonFieldExecute.setText("Execute");
        jButtonFieldExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFieldExecuteActionPerformed(evt);
            }
        });

        jComboBoxSportNameInjMenuItemField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSportNameInjMenuItemField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSportNameInjMenuItemFieldActionPerformed(evt);
            }
        });

        jButtonFieldCreation.setText("Create");
        jButtonFieldCreation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonFieldCreationMouseReleased(evt);
            }
        });
        jButtonFieldCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFieldCreationActionPerformed(evt);
            }
        });

        jButtonFieldUpdating.setText("Update");
        jButtonFieldUpdating.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonFieldUpdatingMouseReleased(evt);
            }
        });
        jButtonFieldUpdating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFieldUpdatingActionPerformed(evt);
            }
        });

        jButtonFieldDeletion.setText("Delete");
        jButtonFieldDeletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonFieldDeletionMouseReleased(evt);
            }
        });
        jButtonFieldDeletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFieldDeletionActionPerformed(evt);
            }
        });

        jTextFieldFieldNewName.setEditable(false);

        jComboBoxFieldsNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxFieldsNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFieldsNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneFieldsLayout = new javax.swing.GroupLayout(jLayeredPaneFields);
        jLayeredPaneFields.setLayout(jLayeredPaneFieldsLayout);
        jLayeredPaneFieldsLayout.setHorizontalGroup(
            jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelFieldName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxSportNameInjMenuItemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldFieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabelFieldNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxFieldsNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldFieldNo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4))
                    .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                                .addComponent(jButtonFieldCreation)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonFieldUpdating)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonFieldDeletion)
                                .addGap(4, 4, 4))
                            .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                                .addComponent(jButtonFieldExecute)
                                .addGap(69, 69, 69))))))
        );
        jLayeredPaneFieldsLayout.setVerticalGroup(
            jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneFieldsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonFieldCreation)
                            .addComponent(jButtonFieldUpdating)
                            .addComponent(jButtonFieldDeletion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldFieldNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelFieldNo)
                            .addComponent(jComboBoxFieldsNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxSportNameInjMenuItemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelFieldName)
                            .addComponent(jTextFieldFieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFieldExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(279, Short.MAX_VALUE))
        );
        jLayeredPaneFields.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jTextFieldFieldNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jLabelFieldNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jLabelFieldName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jButtonFieldExecute, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jComboBoxSportNameInjMenuItemField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jButtonFieldCreation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jButtonFieldUpdating, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jButtonFieldDeletion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jTextFieldFieldNewName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneFields.setLayer(jComboBoxFieldsNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableActualSports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableActualSportsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableActualSports);

        jButtonSportCreation.setText("Create");
        jButtonSportCreation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSportCreationMouseReleased(evt);
            }
        });
        jButtonSportCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportCreationActionPerformed(evt);
            }
        });

        jButtonSportUpdating.setText("Update");
        jButtonSportUpdating.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSportUpdatingMouseReleased(evt);
            }
        });
        jButtonSportUpdating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportUpdatingActionPerformed(evt);
            }
        });

        jButtonSportDeletion.setText("Delete");
        jButtonSportDeletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSportDeletionMouseReleased(evt);
            }
        });
        jButtonSportDeletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportDeletionActionPerformed(evt);
            }
        });

        jLabel36.setText("Sport name:");

        jLabelAdditionalInfo.setText("Instr Price:");

        jTextFieldSportName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportNameActionPerformed(evt);
            }
        });

        jButtonSportExecute.setText("Execute");
        jButtonSportExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportExecuteActionPerformed(evt);
            }
        });

        jComboBoxSportName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSportName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSportNameActionPerformed(evt);
            }
        });

        jComboBoxSportInstructorPrice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel56.setText("to");

        javax.swing.GroupLayout jLayeredPaneSportsLayout = new javax.swing.GroupLayout(jLayeredPaneSports);
        jLayeredPaneSports.setLayout(jLayeredPaneSportsLayout);
        jLayeredPaneSportsLayout.setHorizontalGroup(
            jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneSportsLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxSportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSportName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportsLayout.createSequentialGroup()
                        .addComponent(jLabelAdditionalInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxSportInstructorPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSportInstructorPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportsLayout.createSequentialGroup()
                                .addComponent(jButtonSportCreation)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSportUpdating)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSportDeletion))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportsLayout.createSequentialGroup()
                                .addComponent(jTextFieldSportMinPPL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(jLabel56)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldSportMaxPPL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSportExecute)
                .addGap(69, 69, 69))
        );
        jLayeredPaneSportsLayout.setVerticalGroup(
            jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSportsLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPaneSportsLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(jLayeredPaneSportsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSportCreation)
                            .addComponent(jButtonSportUpdating)
                            .addComponent(jButtonSportDeletion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(jTextFieldSportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSportMinPPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSportMaxPPL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSportInstructorPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jComboBoxSportInstructorPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelAdditionalInfo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jButtonSportExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );
        jLayeredPaneSports.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jButtonSportCreation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jButtonSportUpdating, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jButtonSportDeletion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jLabel36, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jLabelAdditionalInfo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jTextFieldSportName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jTextFieldSportInstructorPrice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jButtonSportExecute, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jComboBoxSportName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jComboBoxSportInstructorPrice, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jTextFieldSportMinPPL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jTextFieldSportMaxPPL, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSports.setLayer(jLabel56, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEmployeeMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTableEmployee);

        jButtonEmployeeCreation.setText("Create");
        jButtonEmployeeCreation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonEmployeeCreationMouseReleased(evt);
            }
        });
        jButtonEmployeeCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeCreationActionPerformed(evt);
            }
        });

        jButtonEmployeeUpdating.setText("Update");
        jButtonEmployeeUpdating.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonEmployeeUpdatingMouseReleased(evt);
            }
        });
        jButtonEmployeeUpdating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeUpdatingActionPerformed(evt);
            }
        });

        jButtonEmployeeDeletion.setText("Delete");
        jButtonEmployeeDeletion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonEmployeeDeletionMouseReleased(evt);
            }
        });
        jButtonEmployeeDeletion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeDeletionActionPerformed(evt);
            }
        });

        jTextFieldEmployeeNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmployeeNoActionPerformed(evt);
            }
        });

        jTextFieldEmployeeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmployeeNameActionPerformed(evt);
            }
        });

        jTextFieldEmployeePosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEmployeePositionActionPerformed(evt);
            }
        });

        jLabeEmployeeNo.setText("employee number:");

        jLabel38.setText("employee name:");

        jLabel39.setText("Position:");

        jButtonEmployeeExecute.setText("Execute");
        jButtonEmployeeExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmployeeExecuteActionPerformed(evt);
            }
        });

        jComboBoxEmployeeNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxEmployeeNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEmployeeNoActionPerformed(evt);
            }
        });

        jComboBoxEmployeePosition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Instructor", "Receptionist" }));

        javax.swing.GroupLayout jLayeredPaneEmployeeLayout = new javax.swing.GroupLayout(jLayeredPaneEmployee);
        jLayeredPaneEmployee.setLayout(jLayeredPaneEmployeeLayout);
        jLayeredPaneEmployeeLayout.setHorizontalGroup(
            jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabeEmployeeNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneEmployeeLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxEmployeePosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldEmployeePosition, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                                .addComponent(jButtonEmployeeCreation)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEmployeeUpdating)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEmployeeDeletion))
                            .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                                .addComponent(jButtonEmployeeExecute)
                                .addGap(71, 71, 71)))))
                .addContainerGap())
        );
        jLayeredPaneEmployeeLayout.setVerticalGroup(
            jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneEmployeeLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEmployeeCreation)
                            .addComponent(jButtonEmployeeUpdating)
                            .addComponent(jButtonEmployeeDeletion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabeEmployeeNo)
                            .addComponent(jComboBoxEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneEmployeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEmployeePosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39)
                            .addComponent(jComboBoxEmployeePosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jButtonEmployeeExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        jLayeredPaneEmployee.setLayer(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jButtonEmployeeCreation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jButtonEmployeeUpdating, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jButtonEmployeeDeletion, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jTextFieldEmployeeNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jTextFieldEmployeeName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jTextFieldEmployeePosition, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jLabeEmployeeNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jLabel38, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jLabel39, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jButtonEmployeeExecute, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jComboBoxEmployeeNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneEmployee.setLayer(jComboBoxEmployeePosition, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableSportBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableSportBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSportBookingMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTableSportBooking);

        jButtonSportBookingCreation.setText("Create");
        jButtonSportBookingCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportBookingCreationActionPerformed(evt);
            }
        });

        jButtonSportBookingUpdate.setText("Update");
        jButtonSportBookingUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportBookingUpdateActionPerformed(evt);
            }
        });

        jButtonSportBookingDelete.setText("Delete");
        jButtonSportBookingDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportBookingDeleteActionPerformed(evt);
            }
        });

        jTextFieldSportBookingBookingNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportBookingBookingNoActionPerformed(evt);
            }
        });

        jTextFieldSportBookingClientNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportBookingClientNoActionPerformed(evt);
            }
        });

        jTextFieldSportBookingFieldNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportBookingFieldNoActionPerformed(evt);
            }
        });

        jTextFieldSportBookingBookingHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportBookingBookingHourActionPerformed(evt);
            }
        });

        jLabelSportBookingNo.setText("Booking no:");

        jLabel42.setText("Client no:");

        jLabel43.setText("Field no:");

        jLabel44.setText("Booking Date:");

        jLabel45.setText("Booking Hour:");

        jButtonSportBookingExecute.setText("Execute");
        jButtonSportBookingExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportBookingExecuteActionPerformed(evt);
            }
        });

        jLabel46.setText("Instructor no:");

        jTextFieldSportBookingInstructorNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportBookingInstructorNoActionPerformed(evt);
            }
        });

        jComboBoxBookingHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "16:00", "17:00", "18:00" }));
        jComboBoxBookingHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBookingHourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneSportBookingLayout = new javax.swing.GroupLayout(jLayeredPaneSportBooking);
        jLayeredPaneSportBooking.setLayout(jLayeredPaneSportBookingLayout);
        jLayeredPaneSportBookingLayout.setHorizontalGroup(
            jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSportBookingNo)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43)
                            .addComponent(jButtonSportBookingCreation))
                        .addGap(14, 14, 14)
                        .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jButtonSportBookingUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSportBookingDelete)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                                        .addComponent(jComboBoxSportBookingFieldNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldSportBookingFieldNo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneSportBookingLayout.createSequentialGroup()
                                        .addComponent(jComboBoxSportBookingClientNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldSportBookingClientNo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                                        .addComponent(jComboBoxSportBookingBookingNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextFieldSportBookingBookingNo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel44)
                                    .addComponent(jLabel46))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportBookingLayout.createSequentialGroup()
                                        .addComponent(jComboBoxSportBookingInstructorNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldSportBookingInstructorNo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonSportBookingExecute, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportBookingLayout.createSequentialGroup()
                                        .addComponent(jComboBoxBookingHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldSportBookingBookingHour, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPaneSportBookingLayout.setVerticalGroup(
            jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSportBookingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSportBookingCreation)
                    .addComponent(jButtonSportBookingUpdate)
                    .addComponent(jButtonSportBookingDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSportBookingBookingNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSportBookingNo)
                    .addComponent(jLabel44)
                    .addComponent(jComboBoxSportBookingBookingNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSportBookingClientNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSportBookingBookingHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel45)
                    .addComponent(jComboBoxSportBookingClientNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBookingHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneSportBookingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSportBookingFieldNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel46)
                    .addComponent(jTextFieldSportBookingInstructorNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSportBookingFieldNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSportBookingInstructorNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSportBookingExecute)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        jLayeredPaneSportBooking.setLayer(jScrollPane8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jButtonSportBookingCreation, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jButtonSportBookingUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jButtonSportBookingDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jTextFieldSportBookingBookingNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jTextFieldSportBookingClientNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jTextFieldSportBookingFieldNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jTextFieldSportBookingBookingHour, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jLabelSportBookingNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jLabel42, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jLabel43, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jLabel44, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jLabel45, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jButtonSportBookingExecute, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jLabel46, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jTextFieldSportBookingInstructorNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jComboBoxSportBookingClientNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jComboBoxSportBookingFieldNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jComboBoxBookingHour, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jComboBoxSportBookingInstructorNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBooking.setLayer(jComboBoxSportBookingBookingNo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonLogIn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButtonLogIn.setText("Log in");
        jButtonLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogInActionPerformed(evt);
            }
        });

        jLabel58.setText("Welcome to our awesome hotel located in South America... ;)");

        javax.swing.GroupLayout jLayeredPaneMainLayout = new javax.swing.GroupLayout(jLayeredPaneMain);
        jLayeredPaneMain.setLayout(jLayeredPaneMainLayout);
        jLayeredPaneMainLayout.setHorizontalGroup(
            jLayeredPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneMainLayout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jButtonLogIn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneMainLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel58)
                .addGap(124, 124, 124))
        );
        jLayeredPaneMainLayout.setVerticalGroup(
            jLayeredPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneMainLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButtonLogIn)
                .addGap(18, 18, 18)
                .addComponent(jLabel58)
                .addContainerGap(331, Short.MAX_VALUE))
        );
        jLayeredPaneMain.setLayer(jButtonLogIn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneMain.setLayer(jLabel58, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPaneSportInstructor.setPreferredSize(new java.awt.Dimension(383, 411));

        jTableSportInstructor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableSportInstructor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSportInstructorMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTableSportInstructor);

        jButtonSportInstructorCreate.setText("Create");
        jButtonSportInstructorCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSportInstructorCreateMouseReleased(evt);
            }
        });
        jButtonSportInstructorCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportInstructorCreateActionPerformed(evt);
            }
        });

        jButtonSportInstructorUpdate.setText("Update");
        jButtonSportInstructorUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSportInstructorUpdateMouseReleased(evt);
            }
        });
        jButtonSportInstructorUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportInstructorUpdateActionPerformed(evt);
            }
        });

        jButtonSportInstructorDelete.setText("Delete");
        jButtonSportInstructorDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonSportInstructorDeleteMouseReleased(evt);
            }
        });
        jButtonSportInstructorDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportInstructorDeleteActionPerformed(evt);
            }
        });

        jTextFieldSportInstructorEmployeeNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportInstructorEmployeeNoActionPerformed(evt);
            }
        });

        jTextFieldSportInstructorSportName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportInstructorSportNameActionPerformed(evt);
            }
        });

        jLabelEmployeeNo1.setText("Employee:");

        jLabel47.setText("Sport name:");

        jButtonSportInstructorExecute.setText("Execute");
        jButtonSportInstructorExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSportInstructorExecuteActionPerformed(evt);
            }
        });

        jComboBoxSportInstructorEmployeeNo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxSportInstructorSportName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextFieldSportInstructorSequence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSportInstructorSequenceActionPerformed(evt);
            }
        });

        jLabel50.setText("Sequence:");

        jComboBoxSportInstructorSequence.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jLayeredPaneSportInstructorLayout = new javax.swing.GroupLayout(jLayeredPaneSportInstructor);
        jLayeredPaneSportInstructor.setLayout(jLayeredPaneSportInstructorLayout);
        jLayeredPaneSportInstructorLayout.setHorizontalGroup(
            jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportInstructorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPaneSportInstructorLayout.createSequentialGroup()
                        .addComponent(jButtonSportInstructorExecute)
                        .addGap(71, 71, 71))
                    .addGroup(jLayeredPaneSportInstructorLayout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jLayeredPaneSportInstructorLayout.createSequentialGroup()
                                .addComponent(jButtonSportInstructorCreate)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSportInstructorUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSportInstructorDelete))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportInstructorLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportInstructorLayout.createSequentialGroup()
                                        .addComponent(jLabelEmployeeNo1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxSportInstructorEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportInstructorLayout.createSequentialGroup()
                                        .addComponent(jLabel47)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxSportInstructorSportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jLayeredPaneSportInstructorLayout.createSequentialGroup()
                                        .addComponent(jLabel50)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxSportInstructorSequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldSportInstructorSportName, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                    .addComponent(jTextFieldSportInstructorEmployeeNo, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                    .addComponent(jTextFieldSportInstructorSequence, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap())
        );
        jLayeredPaneSportInstructorLayout.setVerticalGroup(
            jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSportInstructorLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPaneSportInstructorLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSportInstructorCreate)
                            .addComponent(jButtonSportInstructorUpdate)
                            .addComponent(jButtonSportInstructorDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSportInstructorSequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50)
                            .addComponent(jComboBoxSportInstructorSequence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEmployeeNo1)
                            .addComponent(jComboBoxSportInstructorEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldSportInstructorEmployeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneSportInstructorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSportInstructorSportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSportInstructorSportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47))
                        .addGap(22, 22, 22)
                        .addComponent(jButtonSportInstructorExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(221, Short.MAX_VALUE))
        );
        jLayeredPaneSportInstructor.setLayer(jScrollPane11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jButtonSportInstructorCreate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jButtonSportInstructorUpdate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jButtonSportInstructorDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jTextFieldSportInstructorEmployeeNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jTextFieldSportInstructorSportName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jLabelEmployeeNo1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jLabel47, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jButtonSportInstructorExecute, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jComboBoxSportInstructorEmployeeNo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jComboBoxSportInstructorSportName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jTextFieldSportInstructorSequence, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jLabel50, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportInstructor.setLayer(jComboBoxSportInstructorSequence, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTableSportBookingForClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableSportBookingForClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSportBookingForClientMouseClicked(evt);
            }
        });
        jScrollPane14.setViewportView(jTableSportBookingForClient);

        jButtonCreateBookingByClient.setText("Create");
        jButtonCreateBookingByClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateBookingByClientActionPerformed(evt);
            }
        });

        jButtonUpdateBookingByClient.setText("Update");
        jButtonUpdateBookingByClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateBookingByClientActionPerformed(evt);
            }
        });

        jButtonDeleteBookingByClient.setText("Delete");
        jButtonDeleteBookingByClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteBookingByClientActionPerformed(evt);
            }
        });

        jLabelBookingNoSportBookingByClient.setText("Booking no:");

        jComboBoxBookingNoSportBookingByClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBookingNoSportBookingByClientsActionPerformed(evt);
            }
        });

        jTextFieldBookingNoSportBookingByClient.setText(" ");
        jTextFieldBookingNoSportBookingByClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBookingNoSportBookingByClientActionPerformed(evt);
            }
        });

        jLabel60.setText("Client no:");

        jLabel61.setText("Field no:");

        jTextFieldFieldNoSportBookingByClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFieldNoSportBookingByClientActionPerformed(evt);
            }
        });

        jButtonExecuteSportBookingByClient.setText("Execute");
        jButtonExecuteSportBookingByClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExecuteSportBookingByClientActionPerformed(evt);
            }
        });

        jLabel64.setText("Instructor no:");

        jComboBoxBookingHourSportBookingByClient.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "16:00", "17:00", "18:00" }));

        jLabel63.setText("Booking Hour:");

        jLabel62.setText("Booking Date:");

        javax.swing.GroupLayout jLayeredPaneSportBookingGuestLayout = new javax.swing.GroupLayout(jLayeredPaneSportBookingGuest);
        jLayeredPaneSportBookingGuest.setLayout(jLayeredPaneSportBookingGuestLayout);
        jLayeredPaneSportBookingGuestLayout.setHorizontalGroup(
            jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                        .addComponent(jButtonCreateBookingByClient)
                        .addGap(42, 42, 42)
                        .addComponent(jButtonUpdateBookingByClient)
                        .addGap(37, 37, 37)
                        .addComponent(jButtonDeleteBookingByClient))
                    .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                        .addComponent(jLabelBookingNoSportBookingByClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxBookingNoSportBookingByClients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextFieldBookingNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                            .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel60)
                                .addComponent(jLabel61))
                            .addGap(18, 18, 18)
                            .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                                    .addComponent(jComboBoxFieldNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(jTextFieldFieldNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(jTextFieldClientNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel62)
                    .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxInstructorNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                                .addComponent(jLabel63)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxBookingHourSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldBookingHourSportBookingByClient, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .addComponent(jTextFieldInstructorNoSportBookingByClient))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonExecuteSportBookingByClient)
                .addGap(205, 205, 205))
            .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPaneSportBookingGuestLayout.setVerticalGroup(
            jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneSportBookingGuestLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreateBookingByClient)
                    .addComponent(jButtonUpdateBookingByClient)
                    .addComponent(jButtonDeleteBookingByClient))
                .addGap(24, 24, 24)
                .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBookingNoSportBookingByClient)
                    .addComponent(jLabel62)
                    .addComponent(jComboBoxBookingNoSportBookingByClients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBookingNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(jLabel63)
                    .addComponent(jComboBoxBookingHourSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldClientNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBookingHourSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPaneSportBookingGuestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(jLabel64)
                    .addComponent(jComboBoxFieldNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxInstructorNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFieldNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldInstructorNoSportBookingByClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonExecuteSportBookingByClient)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jLayeredPaneSportBookingGuest.setLayer(jScrollPane14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jButtonCreateBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jButtonUpdateBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jButtonDeleteBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jLabelBookingNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jComboBoxBookingNoSportBookingByClients, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jTextFieldBookingNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jLabel60, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jTextFieldClientNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jLabel61, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jComboBoxFieldNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jTextFieldFieldNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jButtonExecuteSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jLabel64, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jComboBoxInstructorNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jTextFieldInstructorNoSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jTextFieldBookingHourSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jComboBoxBookingHourSportBookingByClient, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jLabel63, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneSportBookingGuest.setLayer(jLabel62, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel51.setForeground(new java.awt.Color(255, 0, 0));
        jLabel51.setText("***ACCOUNT MANAGEMENT MENU***");

        jTableEmployeesAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableEmployeesAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEmployeesAccountsMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(jTableEmployeesAccounts);

        jTableGuestsAccounts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableGuestsAccounts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableGuestsAccountsMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(jTableGuestsAccounts);

        jLabel52.setText("Username:");

        jLabel53.setText("Password:");

        jLabel54.setText("Add...");

        jComboBoxAccountType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Guest", "Employee" }));
        jComboBoxAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAccountTypeActionPerformed(evt);
            }
        });

        jLabel55.setText("Emp/Client:");

        jButtonAccountManagementCreate.setText("Create");
        jButtonAccountManagementCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccountManagementCreateActionPerformed(evt);
            }
        });

        jButtonAccountManagementDelete.setText("Delete");
        jButtonAccountManagementDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccountManagementDeleteActionPerformed(evt);
            }
        });

        jButtonAccountManagementExecute.setText("Execute");
        jButtonAccountManagementExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAccountManagementExecuteActionPerformed(evt);
            }
        });

        jComboBoxAccountManagementID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxAccountManagementID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAccountManagementIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPaneAccountsLayout = new javax.swing.GroupLayout(jLayeredPaneAccounts);
        jLayeredPaneAccounts.setLayout(jLayeredPaneAccountsLayout);
        jLayeredPaneAccountsLayout.setHorizontalGroup(
            jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                                .addComponent(jButtonAccountManagementCreate)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAccountManagementDelete)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                                .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel52)
                                    .addComponent(jLabel54))
                                .addGap(18, 18, 18)
                                .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                                        .addComponent(jComboBoxAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneAccountsLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneAccountsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAccountManagementExecute))
                            .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel55)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxAccountManagementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(jTextFieldAccountManagementID, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPaneAccountsLayout.setVerticalGroup(
            jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAccountManagementCreate)
                            .addComponent(jButtonAccountManagementDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel54))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel53)
                            .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPaneAccountsLayout.createSequentialGroup()
                        .addGroup(jLayeredPaneAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel55)
                            .addComponent(jTextFieldAccountManagementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxAccountManagementID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAccountManagementExecute)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jLayeredPaneAccounts.setLayer(jLabel51, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jScrollPane12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jScrollPane13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jTextFieldUsername, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jTextFieldPassword, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jLabel52, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jLabel53, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jLabel54, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jComboBoxAccountType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jLabel55, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jTextFieldAccountManagementID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jButtonAccountManagementCreate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jButtonAccountManagementDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jButtonAccountManagementExecute, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneAccounts.setLayer(jComboBoxAccountManagementID, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenuHome.setText("HOME");
        jMenuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuHomeMouseClicked(evt);
            }
        });
        jMenuHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHomeActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuHome);

        jMenuClientsRequests.setText("Clients Requests");

        jMenuItemNewReservation.setText("New Reservation");
        jMenuItemNewReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewReservationActionPerformed(evt);
            }
        });
        jMenuClientsRequests.add(jMenuItemNewReservation);

        jMenuItemSportBooking.setText("New Sport Booking");
        jMenuItemSportBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSportBookingActionPerformed(evt);
            }
        });
        jMenuClientsRequests.add(jMenuItemSportBooking);

        jMenuBar1.add(jMenuClientsRequests);

        jMenuHotelAdministration.setText("Hotel Administration");

        jMenuItemReservation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemReservation.setText("Reservations");
        jMenuItemReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReservationActionPerformed(evt);
            }
        });
        jMenuHotelAdministration.add(jMenuItemReservation);

        jMenuItemClientInformation.setText("Client Information");
        jMenuItemClientInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClientInformationActionPerformed(evt);
            }
        });
        jMenuHotelAdministration.add(jMenuItemClientInformation);

        jMenuItemFreeRooms.setText("Free Rooms");
        jMenuItemFreeRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFreeRoomsActionPerformed(evt);
            }
        });
        jMenuHotelAdministration.add(jMenuItemFreeRooms);

        jMenuItemAccounts.setText("Accounts");
        jMenuItemAccounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAccountsActionPerformed(evt);
            }
        });
        jMenuHotelAdministration.add(jMenuItemAccounts);

        jMenuBar1.add(jMenuHotelAdministration);

        jMenuFacilitiesAdministration.setText("Facilities Administration");

        jMenuItemFields.setText("Fields");
        jMenuItemFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFieldsActionPerformed(evt);
            }
        });
        jMenuFacilitiesAdministration.add(jMenuItemFields);

        jMenuItemSports.setText("Sports");
        jMenuItemSports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSportsActionPerformed(evt);
            }
        });
        jMenuFacilitiesAdministration.add(jMenuItemSports);

        jMenuItemEmployee.setText("Employee");
        jMenuItemEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEmployeeActionPerformed(evt);
            }
        });
        jMenuFacilitiesAdministration.add(jMenuItemEmployee);

        jMenuItemSportInstructor.setText("Sport Instructor");
        jMenuItemSportInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSportInstructorActionPerformed(evt);
            }
        });
        jMenuFacilitiesAdministration.add(jMenuItemSportInstructor);

        jMenuBar1.add(jMenuFacilitiesAdministration);

        jMenuSportBooking.setText("Clients Functionality");
        jMenuSportBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSportBookingActionPerformed(evt);
            }
        });

        jMenuItemSportBookingClient.setText("Sport Booking");
        jMenuItemSportBookingClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSportBookingClientActionPerformed(evt);
            }
        });
        jMenuSportBooking.add(jMenuItemSportBookingClient);

        jMenuBar1.add(jMenuSportBooking);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPaneNewReservation, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
            .addComponent(jLayeredPaneReservations, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
            .addComponent(jLayeredPaneShowingGuestInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
            .addComponent(jLayeredPaneFreeRooms, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
            .addComponent(jLayeredPaneFields)
            .addComponent(jLayeredPaneSports)
            .addComponent(jLayeredPaneEmployee)
            .addComponent(jLayeredPaneSportBooking)
            .addComponent(jLayeredPaneMain)
            .addComponent(jLayeredPaneSportInstructor, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
            .addComponent(jLayeredPaneSportBookingGuest)
            .addComponent(jLayeredPaneAccounts)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPaneNewReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneReservations, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneShowingGuestInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneFreeRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneSports, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneSportBooking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneSportInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneSportBookingGuest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPaneAccounts))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRoomTypeActionPerformed
        if (!jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod.isEnabled()) {
            freerooms.removeAllElements();

            Calendar cal = Calendar.getInstance();
            cal.clear();

            java.util.Date date2 = jXDatePickerClientRegistration.getDate();
            java.sql.Date sqlArrival = new java.sql.Date(date2.getTime());
            cal.setTime(date2);
            int nights = (Integer) jSpinnerStayingPeriod.getValue();
            cal.add(Calendar.DATE, nights);
            java.util.Date departure = new java.util.Date(cal.getTimeInMillis());

            java.sql.Date sqlDeparture = new java.sql.Date(departure.getTime());

            List<Room> freeRooms = control.getFreeRoomsAtDate((String) jComboBoxRoomType.getSelectedItem(), sqlArrival, sqlDeparture);
            ArrayList actualNumbers = new ArrayList();
            for (int i = 0; i < freeRooms.size(); i++) {
                actualNumbers.add(freeRooms.get(i).getRoom_no());
            }
            Collections.sort(actualNumbers);
            for (int i = 0; i < actualNumbers.size(); i++) {
                freerooms.addElement(actualNumbers.get(i));
            }

            if (jComboBoxRoomType.getSelectedItem().equals("Single Room")) {
                jComboBoxGuestsNumber.removeAllItems();
                jComboBoxGuestsNumber.addItem("1");
                jComboBoxGuestsNumber.setEnabled(false);
            } else if (jComboBoxRoomType.getSelectedItem().equals("Double Room")) {
                jComboBoxGuestsNumber.setEnabled(true);
                jComboBoxGuestsNumber.removeAllItems();
                jComboBoxGuestsNumber.setModel(jComboBoxGuestsNumber.getModel());
                jComboBoxGuestsNumber.addItem("1");
                jComboBoxGuestsNumber.addItem("2");

                jComboBoxGuestsNumber.setSelectedIndex(1);
            } else if (jComboBoxRoomType.getSelectedItem().equals("Family Room")) {
                jComboBoxGuestsNumber.setEnabled(true);
                jComboBoxGuestsNumber.removeAllItems();
                jComboBoxGuestsNumber.setModel(jComboBoxGuestsNumber.getModel());
                jComboBoxGuestsNumber.addItem("1");
                jComboBoxGuestsNumber.addItem("2");
                jComboBoxGuestsNumber.addItem("3");
                jComboBoxGuestsNumber.addItem("4");
                jComboBoxGuestsNumber.addItem("5");
            }
        } else {
            jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBoxRoomTypeActionPerformed

    private void jComboBoxCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCountryActionPerformed
    }//GEN-LAST:event_jComboBoxCountryActionPerformed

    private void jButtonAddReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddReservationActionPerformed
        //Getting info from Fields,ComboBoxes,Spinners + Parsing
        jMenuClientsRequests.setEnabled(false);
        jMenuHotelAdministration.setEnabled(false);
        jMenuFacilitiesAdministration.setEnabled(false);
        jMenuSportBooking.setEnabled(false);
        if (wasTheGuestInTheHotelBefore == 0) {

            if (!checkingReservationForErrors()) {

                if (firstGuest == false) {
                    addGuest();
                    String numberOfGuests = "" + jComboBoxGuestsNumber.getSelectedItem();
                    actualNumberOfGuests = Integer.parseInt(numberOfGuests);
                    addingGuests = actualNumberOfGuests;
                    addingGuests--;
                    JOptionPane.showMessageDialog(null, jTextFieldName.getText() + " has been added. (" + addingGuests + "left)", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    lockReservationFields();
                    clearReservationFields();
                    jComboBoxGuestsNumber.setEnabled(false);
                    jCheckBoxDepositPayed.setEnabled(false);
                    jXDatePickerClientRegistration.setEnabled(false);
                    firstGuest = true;
                } else if (addingGuests != 0) {
                    addSecondaryGuest();
                    addingGuests--;
                    JOptionPane.showMessageDialog(null, jTextFieldName.getText() + " has been added. (" + addingGuests + "left)", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    clearReservationFields();
                }
                if (addingGuests == 0) {
                    clearReservationFields();
                    jButtonAddReservation.setEnabled(false);
                    jButtonReservationDone.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "All guests are Added. Now Click 'Done'.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                }
            }

        } else if (wasTheGuestInTheHotelBefore >= 1) {
            if (!checkingReservationForErrors()) {
                if (firstGuest == false) {
                    addExistingGuest();
                    String numberOfGuests = "" + jComboBoxGuestsNumber.getSelectedItem();
                    actualNumberOfGuests = Integer.parseInt(numberOfGuests);
                    addingGuests = actualNumberOfGuests;
                    addingGuests--;
                    JOptionPane.showMessageDialog(null, jTextFieldName.getText() + " has been added. (" + addingGuests + "left)", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    lockReservationFields();
                    clearReservationFields();
                    jComboBoxGuestsNumber.setEnabled(false);
                    jCheckBoxDepositPayed.setEnabled(false);
                    jXDatePickerClientRegistration.setEnabled(false);
                    firstGuest = true;
                    isSecondaryClientFormalClient = 0; //if 0 the client is not formal = you should register him (:
                } else if (addingGuests != 0) {
                    jComboBoxEmail.setVisible(true);
                    jLabel11.setVisible(true);
                    if (isSecondaryClientFormalClient == 0) {
                        addSecondaryGuest();
                    } else if (wasTheGuestInTheHotelBefore >= 1) {

                        control.updateRepresentativeNo(Integer.parseInt(jTextFieldPassport.getText()));

                        isSecondaryClientFormalClient = 0;

                    }
                    addingGuests--;
                    JOptionPane.showMessageDialog(null, jTextFieldName.getText() + " has been added. (" + addingGuests + "left)", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    clearReservationFields();
                }
                if (addingGuests == 0) {
                    clearReservationFields();
                    jButtonAddReservation.setEnabled(false);
                    jButtonReservationDone.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "All guests are Added. Now Click 'Done'.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
        jTextFieldName.setEnabled(false);
        jTextFieldSurname.setEnabled(false);
        jTextFieldAddress.setEnabled(false);
        jComboBoxCountry.setEnabled(false);
        jTextFieldPhone.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jComboBoxEmail.setEnabled(false);
        jTextFieldAgency.setEnabled(false);
    }//GEN-LAST:event_jButtonAddReservationActionPerformed

    private void jTextFieldSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSurnameActionPerformed
    }//GEN-LAST:event_jTextFieldSurnameActionPerformed

    private void jMenuItemNewReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewReservationActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneNewReservation.setVisible(true);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jComboBoxGuestsNumber.setEnabled(false);
        jComboBoxRoomType.setEnabled(false);
        jListRooms.setEnabled(false);
        jButtonReservationDone.setEnabled(false);
        jTextFieldName.setEnabled(false);
        jTextFieldSurname.setEnabled(false);
        jTextFieldAddress.setEnabled(false);
        jComboBoxCountry.setEnabled(false);
        jTextFieldPhone.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jComboBoxEmail.setEnabled(false);
        jTextFieldAgency.setEnabled(false);
        jSpinnerStayingPeriod.setEnabled(false);
        jCheckBoxDepositPayed.setEnabled(false);
        jXDatePickerClientRegistration.setEnabled(false);
        jListRooms.setEnabled(false);
        jButtonAddReservation.setEnabled(false);
    }//GEN-LAST:event_jMenuItemNewReservationActionPerformed

    private void jMenuItemReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReservationActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneReservations.setVisible(true);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jTextFieldReservationID.setEditable(false);
        jButtonChangeReservation.setEnabled(false);
        fillingInTableFromLayeredPaneReservation();

    }//GEN-LAST:event_jMenuItemReservationActionPerformed

    private void jButtonShowGuestInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowGuestInfoActionPerformed
        String stringRoom = jComboBoxPassports.getSelectedItem().toString();
        int passport = Integer.parseInt(stringRoom);
        String email = control.checkPassportEmail(passport);
        String[] parts = email.split("\\@");
        String textBeforeASnable = parts[0];
        jTextFieldClientID.setText(control.checkPassportClientNo(passport) + "");
        jTextFieldNewName.setText(control.checkPassportName(passport));
        jTextFieldNewSurname.setText(control.checkPassportSurname(passport));
        jTextFieldNewAddress.setText(control.checkPassportAddress(passport));
        jTextFieldNewEmail.setText(textBeforeASnable);
        jTextFieldNewPassport.setText(passport + "");
        jTextFieldNewCountry.setText(control.checkPassportCountry(passport));
        jTextFieldNewPhone.setText(control.checkPassportPhone(passport) + "");
        jTextFieldNewAgency.setText(control.checkPassportAgency(passport));
    }//GEN-LAST:event_jButtonShowGuestInfoActionPerformed

    private void jMenuItemClientInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClientInformationActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(true);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jTextFieldClientID.setEditable(false);
        fillingInTableFromLayeredPaneClient();
    }//GEN-LAST:event_jMenuItemClientInformationActionPerformed

    private void jComboBoxRoomTypeChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRoomTypeChooserActionPerformed
        freerooms.removeAllElements();

        java.util.Date dateArrival = jXDatePickerDateArrival.getDate();
        java.sql.Date sqlArrival = new java.sql.Date(dateArrival.getTime());

        java.util.Date dateDeparture = jXDatePickerDateDeparture.getDate();
        java.sql.Date sqlDeparture = new java.sql.Date(dateDeparture.getTime());

        List<Room> freeRooms = control.getFreeRoomsAtDate((String) jComboBoxRoomTypeChooser.getSelectedItem(), sqlArrival, sqlDeparture);
        ArrayList actualNumbers = new ArrayList();
        for (int i = 0; i < freeRooms.size(); i++) {
            actualNumbers.add(freeRooms.get(i).getRoom_no());
        }
        Collections.sort(actualNumbers);
        for (int i = 0; i < actualNumbers.size(); i++) {
            freerooms.addElement(actualNumbers.get(i));

        }
        jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod.setEnabled(true);
    }//GEN-LAST:event_jComboBoxRoomTypeChooserActionPerformed

    private void jMenuItemFreeRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFreeRoomsActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(true);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jComboBoxRoomTypeChooser.setEnabled(false);
    }//GEN-LAST:event_jMenuItemFreeRoomsActionPerformed

    private void jButtonAddReservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddReservationMouseClicked
    }//GEN-LAST:event_jButtonAddReservationMouseClicked

    private void jButtonReservationDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReservationDoneActionPerformed
        control.lockingClientMapper();
        control.lockingReservationMapper();
        JOptionPane.showMessageDialog(null, "Locking tables.", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        control.endTheProcessOfEditingDB();
        control.sendingEmail(clientsInfoForEmailsAL, clientaccountsForEmailsAL, reservationForEmails);
        jButtonReservationDone.setEnabled(false);
        jButtonAddReservation.setEnabled(true);
        jTextFieldName.setEnabled(true);
        jTextFieldSurname.setEnabled(true);
        jTextFieldAddress.setEnabled(true);
        jComboBoxCountry.setEnabled(true);
        jTextFieldPhone.setEnabled(true);
        jTextFieldEmail.setEnabled(true);
        jComboBoxEmail.setEnabled(true);
        jTextFieldAgency.setEnabled(true);
        jSpinnerStayingPeriod.setEnabled(true);
        jCheckBoxDepositPayed.setEnabled(true);
        jTextFieldName.setText("");
        jTextFieldSurname.setText("");
        jTextFieldAddress.setText("");
        jTextFieldPhone.setText("");
        jTextFieldEmail.setText("");
        jTextFieldAgency.setText("");
        jComboBoxCountry.setSelectedIndex(0);
        jComboBoxEmail.setSelectedIndex(0);
        jCheckBoxDepositPayedUpdate.setSelected(false);
        jLayeredPaneNewReservation.setVisible(false);
        JOptionPane.showMessageDialog(null, "Reservation saved. Restarting system...", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        jLayeredPaneNewReservation.setVisible(false);
        restartTheGUIMenues();
    }//GEN-LAST:event_jButtonReservationDoneActionPerformed

    private void jButtonUpdateClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateClientActionPerformed
        if (jTextFieldClientID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Choose a client please. :)", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jTextFieldNewName.getText().isEmpty() || jTextFieldNewSurname.getText().isEmpty() || jTextFieldNewAddress.getText().isEmpty()
                || jTextFieldNewPhone.getText().isEmpty() || jTextFieldNewAgency.getText().isEmpty() || jTextFieldNewPassport.getText().isEmpty()
                || jTextFieldNewCountry.getText().isEmpty() || jTextFieldNewEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jTextFieldNewName.getText().matches(".*[0-9].*") || jTextFieldNewSurname.getText().matches(".*[0-9].*")
                || jTextFieldNewAgency.getText().matches(".*[0-9].*") || jTextFieldNewCountry.getText().matches(".*[0-9].*")) {
            JOptionPane.showMessageDialog(null, "Integers in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jTextFieldNewPhone.getText().matches("^[a-zA-Z]+$") || jTextFieldNewPassport.getText().matches("^[a-zA-Z]+$")) {
            JOptionPane.showMessageDialog(null, "Letters in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            control.lockingClientMapper();
            JOptionPane.showMessageDialog(null, "Changes has been accepted. No errors.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
            String stringID = jTextFieldClientID.getText();
            int id = Integer.parseInt(stringID);
            String stringpassport = jTextFieldNewPassport.getText();
            int passport = Integer.parseInt(stringpassport);
            String stringphone = jTextFieldNewPhone.getText();
            int phone = Integer.parseInt(stringphone);
            control.updateParticularClient(id, jTextFieldNewName.getText(), jTextFieldNewSurname.getText(), jTextFieldNewAddress.getText());
            control.updateClientPersonalInformation(id, passport, jTextFieldNewCountry.getText(), phone, jTextFieldNewEmail.getText() + "@" + (String) jComboBoxChangeEmailClient.getSelectedItem(), jTextFieldNewAgency.getText());
            control.endTheProcessOfEditingDB();
            fillingInTableFromLayeredPaneClient();
            JOptionPane.showMessageDialog(null, "Client changed.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
            jLayeredPaneShowingGuestInformation.setVisible(false);
            restartTheGUIMenues();
        }
    }//GEN-LAST:event_jButtonUpdateClientActionPerformed

    private void jButtonChangeReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeReservationActionPerformed
        if (jTextFieldClientIDReservation.getText().matches("^[a-zA-Z]+$") || jTextFieldRoomReservation.getText().matches("^[a-zA-Z]+$")) {
            JOptionPane.showMessageDialog(null, "Letters in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (Integer.parseInt(jTextFieldRoomReservation.getText()) >= 105 || Integer.parseInt(jTextFieldRoomReservation.getText()) <= 0) {
            JOptionPane.showMessageDialog(null, "Invalid Room NO.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jXDatePickerClientArrival.getDate() == null || jXDatePickerClientDeparture.getDate() == null) {
            JOptionPane.showMessageDialog(null, "You have not chosen a date.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jXDatePickerClientDeparture.getDate().before(jXDatePickerClientArrival.getDate())) {
            JOptionPane.showMessageDialog(null, "Departure date is earlier than arrival", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            boolean isClientExisting = false;
            ArrayList<Client> clientNOs = control.getAllClients();
            for (int i = 0; i < clientNOs.size(); i++) {
                if (clientNOs.get(i).getClient_no() == Integer.parseInt(jTextFieldClientIDReservation.getText())) {
                    isClientExisting = true;
                }
            }
            if (!isClientExisting) {
                JOptionPane.showMessageDialog(null, "Non-existing USER ID", "ERROR", JOptionPane.WARNING_MESSAGE);
            } else {
                String depositpaid = null;
                if (jCheckBoxDepositPayedUpdate.isSelected()) {
                    depositpaid = "Y";
                } else {
                    depositpaid = "N";
                }
                control.lockingReservationMapper();
                JOptionPane.showMessageDialog(null, "Changes has been accepted. No errors.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Thread.sleep(3000);
                } catch (InterruptedException ex) {
                    Thread.currentThread().interrupt();
                }

                jXDatePickerReservationDate.setEditable(false);
                java.util.Date arrival = jXDatePickerClientArrival.getDate();
                java.sql.Date sqlArrival = new java.sql.Date(arrival.getTime());
                java.util.Date departure = jXDatePickerClientDeparture.getDate();
                java.sql.Date sqlDeparture = new java.sql.Date(departure.getTime());
                java.util.Date dateToday = jXDatePickerReservationDate.getDate();
                java.sql.Date reservation_date = new java.sql.Date(dateToday.getTime());

                control.updateReservationInformation(Integer.parseInt(jTextFieldReservationID.getText()), sqlArrival, sqlDeparture, Integer.parseInt(jTextFieldClientIDReservation.getText()), Integer.parseInt(jTextFieldRoomReservation.getText()), depositpaid, reservation_date);
                control.endTheProcessOfEditingDB();
                fillingInTableFromLayeredPaneReservation();
                JOptionPane.showMessageDialog(null, "Information in Reservation table has been changed.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                try {
                    Thread.sleep(3000);
                } catch (InterruptedException ex) {
                    Thread.currentThread().interrupt();
                }
                jLayeredPaneReservations.setVisible(false);
                restartTheGUIMenues();
            }
        }
// OTHER WAY OF PRESENTING DATES INTO jTEXTFIELD, but we thought we could make it better (:
//        SimpleDateFormat formatDate = new SimpleDateFormat("dd-mm-yyyy");
//        java.util.Date invoiceDate;
//        try {
//            invoiceDate = formatDate.parse(jTextFieldArrivalReservation.getText());
//            java.sql.Date arrivalDate = new java.sql.Date(invoiceDate.getTime());
//            invoiceDate = formatDate.parse(jTextFieldArrivalReservation.getText());
//            java.sql.Date departureDate = new java.sql.Date(invoiceDate.getTime());
//            
//        } catch (ParseException ex) {
//            Logger.getLogger(Casablanca.class.getName()).log(Level.SEVERE, null, ex);
//        }

    }//GEN-LAST:event_jButtonChangeReservationActionPerformed

    private void jMenuItemFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFieldsActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneFields.setVisible(true);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jButtonFieldExecute.setEnabled(false);
        jComboBoxSportNameInjMenuItemField.setVisible(false);
        jComboBoxFieldsNo.setVisible(false);
        jButtonFieldCreation.setEnabled(true);
        jButtonFieldUpdating.setEnabled(true);
        jButtonFieldDeletion.setEnabled(true);
        jButtonFieldExecute.setEnabled(false);
        jLabelFieldNo.setText("Field no:");
        jLabelFieldName.setText("Field name:");
        jTextFieldFieldNo.setVisible(true);
        jTextFieldFieldNewName.setVisible(true);
        jTableSportFields.setEnabled(true);
        fillingInLayeredPaneFields();
    }//GEN-LAST:event_jMenuItemFieldsActionPerformed

    private void jXDatePickerClientRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerClientRegistrationActionPerformed
        jComboBoxRoomType.setEnabled(true);
        jListRooms.setEnabled(true);
    }//GEN-LAST:event_jXDatePickerClientRegistrationActionPerformed

    private void jButtonFieldExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFieldExecuteActionPerformed
        if (jComboBoxFieldsNo.isVisible() && jComboBoxSportNameInjMenuItemField.isVisible()) {
            control.updateFieldInformation(Integer.parseInt(jComboBoxFieldsNo.getSelectedItem().toString()), jComboBoxSportNameInjMenuItemField.getSelectedItem().toString());
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Field has been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else if (jComboBoxFieldsNo.isVisible() && !jComboBoxSportNameInjMenuItemField.isVisible()) {
            control.deleteSportField(Integer.parseInt(jComboBoxFieldsNo.getSelectedItem().toString()));
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Field has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else if (!jComboBoxFieldsNo.isVisible() && jComboBoxSportNameInjMenuItemField.isVisible()) {
            control.creatingNewField(jComboBoxSportNameInjMenuItemField.getSelectedItem().toString());
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Field has been created.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        }

        jButtonFieldCreation.setEnabled(true);
        jButtonFieldUpdating.setEnabled(true);
        jButtonFieldDeletion.setEnabled(true);
        jButtonFieldExecute.setEnabled(false);
        jTextFieldFieldNo.setVisible(true);
        jTextFieldFieldNewName.setVisible(true);
        jTextFieldFieldNo.setText("");
        jTextFieldFieldNewName.setText("");
        jLabelFieldNo.setText("Field no:");
        jLabelFieldName.setText("Field name:");
        jTableSportFields.setEnabled(true);
        jComboBoxFieldsNo.setVisible(false);
        jComboBoxSportNameInjMenuItemField.setVisible(false);

        fillingInLayeredPaneFields();
        JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        jLayeredPaneFields.setVisible(false);
        restartTheGUIMenues();
    }//GEN-LAST:event_jButtonFieldExecuteActionPerformed

    private void jTableSportFieldsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSportFieldsMouseClicked
        if (jTableSportFields.isEnabled()) {
            Field field = control.getFieldInfo(Integer.parseInt(jTableSportFields.getValueAt(jTableSportFields.getSelectedRow(), 0).toString()));
            jTextFieldFieldNo.setText(field.getField_no() + "");
            jTextFieldFieldNewName.setText(field.getSport_name());
        }
    }//GEN-LAST:event_jTableSportFieldsMouseClicked

    private void jComboBoxSportNameInjMenuItemFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSportNameInjMenuItemFieldActionPerformed

    }//GEN-LAST:event_jComboBoxSportNameInjMenuItemFieldActionPerformed

    private void jTableActualSportsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableActualSportsMouseClicked
        if (jTableActualSports.isEnabled()) {
            Sport sport = control.getSportPrice(jTableActualSports.getValueAt(jTableActualSports.getSelectedRow(), 0).toString());
            jTextFieldSportName.setText(sport.getSport_name());
            jTextFieldSportMaxPPL.setText(sport.getMax_players() + "");
            jTextFieldSportMinPPL.setText(sport.getMin_players() + "");
            jTextFieldSportInstructorPrice.setText(sport.getPrice_instructor() + "");
        }
    }//GEN-LAST:event_jTableActualSportsMouseClicked

    private void jButtonFieldCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFieldCreationActionPerformed
        lockingInLayeredPaneFields();
        control.lockingFieldMapper();
        jTextFieldFieldNewName.setVisible(false);
        jTextFieldFieldNo.setVisible(false);
        jComboBoxSportNameInjMenuItemField.setVisible(true);
        jLabelFieldNo.setText("Simply choose a Sport (:");
    }//GEN-LAST:event_jButtonFieldCreationActionPerformed

    private void jButtonFieldUpdatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFieldUpdatingActionPerformed
        lockingInLayeredPaneFields();
        control.lockingFieldMapper();
        jComboBoxSportNameInjMenuItemField.setVisible(true);
        jComboBoxFieldsNo.setVisible(true);
        jTextFieldFieldNo.setVisible(false);
        jTextFieldFieldNewName.setVisible(false);
    }//GEN-LAST:event_jButtonFieldUpdatingActionPerformed

    private void jButtonFieldDeletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFieldDeletionActionPerformed
        lockingInLayeredPaneFields();
        control.lockingFieldMapper();
        jComboBoxFieldsNo.setVisible(true);
        jTextFieldFieldNo.setVisible(false);
        jTextFieldFieldNewName.setVisible(false);
        jLabelFieldName.setText("Simply choose an ID (:");
    }//GEN-LAST:event_jButtonFieldDeletionActionPerformed

    private void jMenuItemSportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSportsActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(true);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jTableActualSports.setEnabled(true);
        jButtonSportExecute.setEnabled(false);
        jButtonSportCreation.setEnabled(true);
        jButtonSportUpdating.setEnabled(true);
        jButtonSportDeletion.setEnabled(true);
        jComboBoxSportName.setVisible(false);
        jComboBoxSportInstructorPrice.setVisible(false);
        jTextFieldSportName.setText("");
        jTextFieldSportInstructorPrice.setText("");
        jTextFieldSportMaxPPL.setText("");
        jTextFieldSportMinPPL.setText("");
        jTextFieldSportName.setVisible(true);
        jTextFieldSportInstructorPrice.setVisible(true);
        jLabelAdditionalInfo.setText("Instr Price:");
        jTextFieldSportMaxPPL.setVisible(true);
        jTextFieldSportMinPPL.setVisible(true);
        jLabel56.setVisible(true);
        fillinginLayeredPaneSports();
    }//GEN-LAST:event_jMenuItemSportsActionPerformed

    private void jTableEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEmployeeMouseClicked
        if (jTableEmployee.isEnabled()) {
            Employee employee = control.getEmployeeInfo(Integer.parseInt(jTableEmployee.getValueAt(jTableEmployee.getSelectedRow(), 0).toString()));
            jTextFieldEmployeeNo.setText(employee.getEmployee_no() + "");
            jTextFieldEmployeeName.setText(employee.getEmployee_name());
            jTextFieldEmployeePosition.setText(employee.getEmployee_position());
        }
    }//GEN-LAST:event_jTableEmployeeMouseClicked

    private void jButtonSportExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportExecuteActionPerformed
        if (!checkingCreateSportForErrors()) {
            if (jTextFieldSportName.isVisible() && jTextFieldSportInstructorPrice.isVisible()) {
                control.creatingNewSport(jTextFieldSportName.getText(), Integer.parseInt(jTextFieldSportMinPPL.getText()), Integer.parseInt(jTextFieldSportMaxPPL.getText()), Integer.parseInt(jTextFieldSportInstructorPrice.getText()));
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Sport has been created.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            } else if (jComboBoxSportName.isVisible() && jTextFieldSportInstructorPrice.isVisible()) {
                control.updateInstructorPricefromSportTBL(jComboBoxSportName.getSelectedItem().toString(), Integer.parseInt(jTextFieldSportMinPPL.getText()), Integer.parseInt(jTextFieldSportMaxPPL.getText()), Integer.parseInt(jTextFieldSportInstructorPrice.getText()));
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Sport has been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            } else if (jComboBoxSportName.isVisible() && !jTextFieldSportInstructorPrice.isVisible()) {
                control.deleteActualSportAndInstructorPrice(jComboBoxSportName.getSelectedItem().toString());
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Sport has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "You broke the program... somehow.. now call me ;)", "ERROR", JOptionPane.WARNING_MESSAGE);
            }
            fillinginLayeredPaneSports();
            JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
            jLayeredPaneSports.setVisible(false);
            restartTheGUIMenues();
        }
    }//GEN-LAST:event_jButtonSportExecuteActionPerformed

    private void jMenuItemEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEmployeeActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(true);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jTableEmployee.setEnabled(true);
        jButtonEmployeeCreation.setEnabled(true);
        jButtonEmployeeUpdating.setEnabled(true);
        jButtonEmployeeDeletion.setEnabled(true);
        jButtonEmployeeExecute.setEnabled(false);
        jComboBoxEmployeeNo.setVisible(false);
        jComboBoxEmployeePosition.setVisible(false);
        jTextFieldEmployeeNo.setVisible(true);
        jLabeEmployeeNo.setText("E_NO:");
        jLabel38.setText("E_NAME:");
        jLabel39.setText("Possition");
        jTextFieldEmployeeNo.setText("");
        jTextFieldEmployeeName.setText("");
        jTextFieldEmployeePosition.setText("");
        jTextFieldEmployeeNo.setVisible(true);
        jTextFieldEmployeeName.setVisible(true);
        jTextFieldEmployeePosition.setVisible(true);
        fillinginLayeredPaneEmployee();
    }//GEN-LAST:event_jMenuItemEmployeeActionPerformed

    private void jButtonSportCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportCreationActionPerformed
        lockinginlayeredPaneSports();
        control.lockingSportMapper();
        jTextFieldSportName.setVisible(true);
        jTextFieldSportInstructorPrice.setVisible(true);
        jTextFieldSportName.setText("");
        jTextFieldSportInstructorPrice.setText("");
        jTextFieldSportMinPPL.setText("");
        jTextFieldSportMaxPPL.setText("");
    }//GEN-LAST:event_jButtonSportCreationActionPerformed

    private void jButtonSportUpdatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportUpdatingActionPerformed
        lockinginlayeredPaneSports();
        control.lockingSportMapper();
        jTextFieldSportName.setVisible(false);
        jComboBoxSportName.setVisible(true);
        Sport sport = control.getSportPrice(jComboBoxSportName.getSelectedItem().toString());
        jTextFieldSportInstructorPrice.setText(sport.getPrice_instructor() + "");
        jTextFieldSportMaxPPL.setText(sport.getMax_players() + "");
        jTextFieldSportMinPPL.setText(sport.getMin_players() + "");
        jButtonSportExecute.setEnabled(true);
        jComboBoxEmployeeNo.setEnabled(false);
    }//GEN-LAST:event_jButtonSportUpdatingActionPerformed

    private void jTextFieldSportNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportNameActionPerformed
    }//GEN-LAST:event_jTextFieldSportNameActionPerformed

    private void jButtonSportDeletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportDeletionActionPerformed
        lockinginlayeredPaneSports();
        control.lockingSportMapper();
        jComboBoxSportName.setVisible(true);
        jTextFieldSportName.setVisible(false);
        jTextFieldSportInstructorPrice.setVisible(false);
        jButtonSportExecute.setEnabled(true);
        jTextFieldSportMaxPPL.setVisible(false);
        jTextFieldSportMinPPL.setVisible(false);
        jLabel56.setVisible(false);
        jLabelAdditionalInfo.setText("Choose a Sport for deletion");
    }//GEN-LAST:event_jButtonSportDeletionActionPerformed

    private void jComboBoxSportNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSportNameActionPerformed
        Sport sport = control.getSportPrice(jComboBoxSportName.getSelectedItem().toString());
        jTextFieldSportInstructorPrice.setText(sport.getPrice_instructor() + "");
        jTextFieldSportName.setText(jComboBoxSportName.getSelectedItem().toString());
        jTextFieldSportMaxPPL.setText(sport.getMax_players() + "");
        jTextFieldSportMinPPL.setText(sport.getMin_players() + "");
    }//GEN-LAST:event_jComboBoxSportNameActionPerformed

    private void jTextFieldEmployeeNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeNoActionPerformed
    }//GEN-LAST:event_jTextFieldEmployeeNoActionPerformed

    private void jTextFieldEmployeeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmployeeNameActionPerformed
    }//GEN-LAST:event_jTextFieldEmployeeNameActionPerformed

    private void jTextFieldEmployeePositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEmployeePositionActionPerformed
        lockingInLayeredPaneEmployee();
    }//GEN-LAST:event_jTextFieldEmployeePositionActionPerformed

    private void jButtonEmployeeExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeExecuteActionPerformed

        if (!jComboBoxEmployeeNo.isVisible() && jTextFieldEmployeeName.isVisible() && jComboBoxEmployeePosition.isVisible()) {
            control.creatingNewEmployee(jTextFieldEmployeeName.getText(), jComboBoxEmployeePosition.getSelectedItem().toString());
            Random randomize = new Random();
            String username = "emp_" + jTextFieldEmployeeName.getText().substring(0, 2) + randomize.nextInt(99);
            String password = jComboBoxEmployeePosition.getSelectedItem().toString().substring(0, 3) + randomize.nextInt(99);
            control.creatingNewLogin(username, password, 0, false);
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Employee has been created.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else if (jComboBoxEmployeeNo.isVisible() && jTextFieldEmployeeName.isVisible() && jComboBoxEmployeePosition.isVisible()) {
            control.updateEmployeeInformation(Integer.parseInt(jComboBoxEmployeeNo.getSelectedItem().toString()), jTextFieldEmployeeName.getText(), jComboBoxEmployeePosition.getSelectedItem().toString());
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Employee has been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else if (jComboBoxEmployeeNo.isVisible() && !jTextFieldEmployeeName.isVisible() && !jComboBoxEmployeePosition.isVisible()) {
            control.deleteEmployee(Integer.parseInt(jComboBoxEmployeeNo.getSelectedItem().toString()));
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Employee had been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "You broke the program... somehow.. now call me ;)", "ERROR", JOptionPane.WARNING_MESSAGE);
        }

        jButtonEmployeeCreation.setEnabled(true);
        jButtonEmployeeDeletion.setEnabled(true);
        jButtonEmployeeUpdating.setEnabled(true);
        jButtonEmployeeExecute.setEnabled(false);
        jTableSportFields.setEnabled(true);
        jLabeEmployeeNo.setText("E_NO:");
        jLabel38.setText("E_NAME");
        jLabel39.setText("E_Possition");
        jTextFieldEmployeeNo.setVisible(true);
        jTextFieldEmployeeName.setVisible(true);
        jTextFieldEmployeePosition.setVisible(true);
        jTextFieldEmployeeNo.setText("");
        jTextFieldEmployeeName.setText("");
        jTextFieldEmployeePosition.setText("");
        jComboBoxEmployeeNo.setVisible(false);
        jComboBoxEmployeePosition.setVisible(false);
        fillinginLayeredPaneEmployee();
        JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        jLayeredPaneEmployee.setVisible(false);
        restartTheGUIMenues();
    }//GEN-LAST:event_jButtonEmployeeExecuteActionPerformed

    private void jButtonEmployeeCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeCreationActionPerformed
        lockingInLayeredPaneEmployee();
        control.lockingEmployeeMapper();
        jTextFieldEmployeeNo.setVisible(false);
        jLabeEmployeeNo.setText("Employee_no will be auto-generated");
        jTextFieldEmployeeNo.setText("");
        jTextFieldEmployeeName.setText("");
        jTextFieldEmployeePosition.setText("");
        jTextFieldEmployeeName.setVisible(true);
        jTextFieldEmployeePosition.setVisible(false);
        jComboBoxEmployeeNo.setEnabled(false);
        jComboBoxEmployeePosition.setVisible(true);
    }//GEN-LAST:event_jButtonEmployeeCreationActionPerformed

    private void jButtonEmployeeUpdatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeUpdatingActionPerformed
        lockingInLayeredPaneEmployee();
        control.lockingEmployeeMapper();
        jTextFieldEmployeeNo.setVisible(false);
        jComboBoxEmployeeNo.setVisible(true);
        jComboBoxEmployeeNo.setEnabled(true);
        jLabeEmployeeNo.setText("E_NO:");
        Employee employee = control.getEmployeeInfo(Integer.parseInt(jComboBoxEmployeeNo.getSelectedItem().toString()));
        jTextFieldEmployeeName.setText(employee.getEmployee_name());
        jTextFieldEmployeePosition.setVisible(false);
        jComboBoxEmployeePosition.setVisible(true);

    }//GEN-LAST:event_jButtonEmployeeUpdatingActionPerformed

    private void jComboBoxEmployeeNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEmployeeNoActionPerformed
        Employee employee = control.getEmployeeInfo(Integer.parseInt(jComboBoxEmployeeNo.getSelectedItem().toString()));
        jTextFieldEmployeeName.setText(employee.getEmployee_name());
        jTextFieldEmployeePosition.setText(employee.getEmployee_position());
    }//GEN-LAST:event_jComboBoxEmployeeNoActionPerformed

    private void jButtonEmployeeDeletionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmployeeDeletionActionPerformed
        lockingInLayeredPaneEmployee();
        control.lockingEmployeeMapper();
        jTextFieldEmployeeNo.setVisible(false);
        jTextFieldEmployeeName.setVisible(false);
        jTextFieldEmployeePosition.setVisible(false);
        jComboBoxEmployeeNo.setVisible(true);
        jLabel38.setText("");
        jLabel39.setText("Choose Employee_no for deletion");
    }//GEN-LAST:event_jButtonEmployeeDeletionActionPerformed

    private void jXDatePickerDateArrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerDateArrivalActionPerformed
        if (jXDatePickerDateArrival.getDate() != null && jXDatePickerDateDeparture.getDate() != null) {
            jComboBoxRoomTypeChooser.setEnabled(true);
        }
    }//GEN-LAST:event_jXDatePickerDateArrivalActionPerformed

    private void jXDatePickerDateDepartureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerDateDepartureActionPerformed
        if (jXDatePickerDateArrival.getDate() != null && jXDatePickerDateDeparture.getDate() != null) {
            jComboBoxRoomTypeChooser.setEnabled(true);
        }
    }//GEN-LAST:event_jXDatePickerDateDepartureActionPerformed

    private void jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriodActionPerformed
        if (jXDatePickerDateArrival.getDate() == null || jXDatePickerDateDeparture.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Dates not chosen.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jListFreeRooms.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Room not chosen.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else if (jXDatePickerDateDeparture.getDate().before(jXDatePickerDateArrival.getDate())) {
            JOptionPane.showMessageDialog(null, "Departure date is earlier than arrival", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            int test = Integer.parseInt(jListFreeRooms.getSelectedValue().toString());
            int selectedIndexRoom = jComboBoxRoomTypeChooser.getSelectedIndex();
            jComboBoxRoomType.setSelectedIndex(selectedIndexRoom);
            jListRooms.setSelectedValue(test, true);
            jListRooms.setEnabled(false);
            jComboBoxRoomType.setEnabled(false);
            jXDatePickerClientRegistration.setDate(jXDatePickerDateArrival.getDate());
            jXDatePickerClientRegistration.setEnabled(false);
            jLayeredPaneFreeRooms.setVisible(false);
            jLayeredPaneNewReservation.setVisible(true);
        }
    }//GEN-LAST:event_jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriodActionPerformed

    private void jTableSportBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSportBookingMouseClicked
        if (jTableSportBooking.isEnabled()) {
            SportBooking sportBooking = control.getSportBookingInfo(Integer.parseInt(jTableSportBooking.getValueAt(jTableSportBooking.getSelectedRow(), 0).toString()));
            jTextFieldSportBookingBookingNo.setText(sportBooking.getSportBooking_no() + "");
            jTextFieldSportBookingClientNo.setText(sportBooking.getClient_no() + "");
            jTextFieldSportBookingFieldNo.setText(sportBooking.getField_no() + "");
            jXDatePickerBookingDate.setDate(sportBooking.getSportBooking_Date());
            jTextFieldSportBookingBookingHour.setText(sportBooking.getSportBooking_Hour());
            jTextFieldSportBookingInstructorNo.setText(sportBooking.getInstructor_no() + "");
        }
    }//GEN-LAST:event_jTableSportBookingMouseClicked

    private void jMenuSportBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSportBookingActionPerformed
    }//GEN-LAST:event_jMenuSportBookingActionPerformed

    private void jMenuItemSportBookingClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSportBookingClientActionPerformed
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneSportBookingGuest.setVisible(true);
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLabelBookingNoSportBookingByClient.setText("Booking no:");
        jLabel64.setText("Instructor no:");
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneSportBookingGuest.setVisible(true);
        jTextFieldBookingNoSportBookingByClient.setEnabled(false);
        jTextFieldClientNoSportBookingByClient.setEnabled(false);
        jTextFieldBookingNoSportBookingByClient.setVisible(true);
        jTextFieldClientNoSportBookingByClient.setVisible(true);
        jTextFieldFieldNoSportBookingByClient.setVisible(true);
        jTextFieldInstructorNoSportBookingByClient.setVisible(true);
        jTextFieldBookingHourSportBookingByClient.setVisible(true);
        jComboBoxFieldNoSportBookingByClient.setVisible(false);
        jComboBoxInstructorNoSportBookingByClient.setVisible(false);
        jComboBoxBookingNoSportBookingByClients.setVisible(false);
        jComboBoxBookingHourSportBookingByClient.setVisible(false);
        jLabel60.setVisible(true);
        jLabel61.setVisible(true);
        jLabel61.setVisible(true);
        jLabel62.setVisible(true);
        jLabel63.setVisible(true);
        jXDatePickerBookingDateSportBookingByClient.setVisible(true);
        jTableSportBookingForClient.setEnabled(true);
        jButtonCreateBookingByClient.setEnabled(true);
        jButtonUpdateBookingByClient.setEnabled(true);
        jButtonDeleteBookingByClient.setEnabled(true);
        jButtonExecuteSportBookingByClient.setEnabled(false);
        jTextFieldClientNoSportBookingByClient.setText(control.getCurrentClientNo() + "");
        fillingInLayeredPaneSportBookingByClient();
    }//GEN-LAST:event_jMenuItemSportBookingClientActionPerformed

    private void jTextFieldSportBookingBookingNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportBookingBookingNoActionPerformed
    }//GEN-LAST:event_jTextFieldSportBookingBookingNoActionPerformed

    private void jTextFieldSportBookingClientNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportBookingClientNoActionPerformed
    }//GEN-LAST:event_jTextFieldSportBookingClientNoActionPerformed

    private void jTextFieldSportBookingFieldNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportBookingFieldNoActionPerformed
    }//GEN-LAST:event_jTextFieldSportBookingFieldNoActionPerformed

    private void jTextFieldSportBookingBookingHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportBookingBookingHourActionPerformed
    }//GEN-LAST:event_jTextFieldSportBookingBookingHourActionPerformed

    private void jButtonSportBookingExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportBookingExecuteActionPerformed
        if (jXDatePickerBookingDate.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Date misssing.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            control.lockingSportBookingMapper();
            JOptionPane.showMessageDialog(null, "Changes has been accepted. Table Locked. ", "Success.", JOptionPane.INFORMATION_MESSAGE);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
        }
        switch (jLabelSportBookingNo.getText()) {
            case "Auto-generated": {
                java.util.Date date = jXDatePickerBookingDate.getDate();
                java.sql.Date sqlBookingDate = new java.sql.Date(date.getTime());
                int clientno = Integer.parseInt(jComboBoxSportBookingClientNo.getSelectedItem().toString());
                int fieldno = Integer.parseInt(jComboBoxSportBookingFieldNo.getSelectedItem().toString());
                String hour = jComboBoxBookingHour.getSelectedItem().toString();
                int instructorno = Integer.parseInt(jComboBoxSportBookingInstructorNo.getSelectedItem().toString());
                control.creatingNewSportBooking(clientno, fieldno, sqlBookingDate, hour, instructorno);
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Sport Booking has been created.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                break;
            }
            case "Choose booking no for deletion:": {
                int bookingno = Integer.parseInt(jComboBoxSportBookingBookingNo.getSelectedItem().toString());
                control.deleteSportBooking(bookingno);
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Sport Booking has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                break;
            }
            default: {
                java.util.Date date = jXDatePickerBookingDate.getDate();
                java.sql.Date sqlBookingDate = new java.sql.Date(date.getTime());
                int bookingno = Integer.parseInt(jComboBoxSportBookingBookingNo.getSelectedItem().toString());
                int clientno = Integer.parseInt(jComboBoxSportBookingClientNo.getSelectedItem().toString());
                int fieldno = Integer.parseInt(jComboBoxSportBookingFieldNo.getSelectedItem().toString());
                String hour = jComboBoxBookingHour.getSelectedItem().toString();
                int instructorno = Integer.parseInt(jComboBoxSportBookingInstructorNo.getSelectedItem().toString());
                control.updateSportBookingInformation(bookingno, clientno, fieldno, sqlBookingDate, hour, instructorno);
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Sport Booking has been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                break;
            }
        }
        fillingInLayeredPaneSportBooking();
        JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        jLayeredPaneSportBooking.setVisible(false);
        restartTheGUIMenues();

    }//GEN-LAST:event_jButtonSportBookingExecuteActionPerformed

    private void jTextFieldSportBookingInstructorNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportBookingInstructorNoActionPerformed
    }//GEN-LAST:event_jTextFieldSportBookingInstructorNoActionPerformed

    private void jButtonSportBookingCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportBookingCreationActionPerformed
        lockingInLayeredPaneSportBooking();
        jTextFieldSportBookingBookingNo.setVisible(false);
        jLabelSportBookingNo.setText("Auto-generated");
        jTextFieldSportBookingClientNo.setVisible(false);
        jTextFieldSportBookingFieldNo.setVisible(false);
        jTextFieldSportBookingInstructorNo.setVisible(false);
        jTextFieldSportBookingBookingHour.setVisible(false);
        jXDatePickerBookingDate.setDate(null);
        jComboBoxSportBookingClientNo.setVisible(true);
        jComboBoxSportBookingFieldNo.setVisible(true);
        jComboBoxSportBookingInstructorNo.setVisible(true);
        jComboBoxBookingHour.setVisible(true);
        jTableSportBooking.setEnabled(false);
    }//GEN-LAST:event_jButtonSportBookingCreationActionPerformed

    private void jButtonSportBookingUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportBookingUpdateActionPerformed
        lockingInLayeredPaneSportBooking();
        jTextFieldSportBookingBookingNo.setVisible(false);
        jLabelSportBookingNo.setText("Booking no:");
        jTextFieldSportBookingClientNo.setVisible(false);
        jTextFieldSportBookingFieldNo.setVisible(false);
        jTextFieldSportBookingInstructorNo.setVisible(false);
        jTextFieldSportBookingBookingHour.setVisible(false);
        jComboBoxSportBookingClientNo.setVisible(true);
        jComboBoxSportBookingFieldNo.setVisible(true);
        jComboBoxSportBookingInstructorNo.setVisible(true);
        jComboBoxSportBookingBookingNo.setVisible(true);
        jComboBoxBookingHour.setVisible(true);
        jTableSportBooking.setEnabled(false);
        jXDatePickerBookingDate.setDate(null);
    }//GEN-LAST:event_jButtonSportBookingUpdateActionPerformed

    private void jButtonSportBookingDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportBookingDeleteActionPerformed
        lockingInLayeredPaneSportBooking();
        jTextFieldSportBookingBookingNo.setVisible(false);
        jLabelSportBookingNo.setText("Choose booking no for deletion:");
        jTextFieldSportBookingClientNo.setVisible(false);
        jTextFieldSportBookingFieldNo.setVisible(false);
        jTextFieldSportBookingInstructorNo.setVisible(false);
        jTextFieldSportBookingBookingHour.setVisible(false);
        jComboBoxSportBookingBookingNo.setVisible(true);
        jXDatePickerBookingDate.setVisible(false);
        jLabel42.setVisible(false);
        jLabel43.setVisible(false);
        jLabel44.setVisible(false);
        jLabel45.setVisible(false);
        jLabel46.setVisible(false);
        jTableSportBooking.setEnabled(false);
    }//GEN-LAST:event_jButtonSportBookingDeleteActionPerformed

    private void jComboBoxBookingHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBookingHourActionPerformed
    }//GEN-LAST:event_jComboBoxBookingHourActionPerformed

    private void jXDatePickerBookingDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerBookingDateActionPerformed
    }//GEN-LAST:event_jXDatePickerBookingDateActionPerformed

    private void jComboBoxFieldsNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFieldsNoActionPerformed
    }//GEN-LAST:event_jComboBoxFieldsNoActionPerformed

    private void jTableClientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientsMouseClicked
        Client client = control.getParticularClient(Integer.parseInt(jTableClients.getValueAt(jTableClients.getSelectedRow(), 8).toString()));
        Client pClient = control.getParticularClientPrivateInf(Integer.parseInt(jTableClients.getValueAt(jTableClients.getSelectedRow(), 8).toString()));
        String email = pClient.getClient_email() + "";
        String[] parts = email.split("\\@");
        String textBeforeASnable = parts[0];
        jTextFieldClientID.setText(client.getClient_no() + "");
        jTextFieldNewName.setText(client.getClient_name());
        jTextFieldNewSurname.setText(client.getClient_surname());
        jTextFieldNewAddress.setText(client.getClient_address());
        jTextFieldNewEmail.setText(textBeforeASnable);
        jTextFieldNewPassport.setText(pClient.getClient_passport() + "");
        jTextFieldNewCountry.setText(pClient.getClient_country());
        jTextFieldNewPhone.setText(pClient.getClient_phone() + "");
        jTextFieldNewAgency.setText(pClient.getClient_agency());
    }//GEN-LAST:event_jTableClientsMouseClicked

    private void yo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yo
    }//GEN-LAST:event_yo

    private void jButtonCheckPassportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCheckPassportActionPerformed
        try {
            Integer.parseInt(jTextFieldPassport.getText());
            if (jTextFieldPassport.getText().length() != 9) {
                JOptionPane.showMessageDialog(null, "Passport length should be 9.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } else if (jTextFieldPassport.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Add the passport number please.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } else if (control.checkIfaParticularPassportNoExistsInTheDataBase(Integer.parseInt(jTextFieldPassport.getText()))) {

                wasTheGuestInTheHotelBefore += 1;
                isSecondaryClientFormalClient = 1;
                String str = control.checkPassportEmail(Integer.parseInt(jTextFieldPassport.getText()));
                int split = str.indexOf("@");
                String first = str.substring(0, split);
                String second = str.substring(split+1, str.length());
                jTextFieldName.setText(control.checkPassportName(Integer.parseInt(jTextFieldPassport.getText())));
                jTextFieldAddress.setText(control.checkPassportAddress(Integer.parseInt(jTextFieldPassport.getText())));
                jTextFieldAgency.setText(control.checkPassportAgency(Integer.parseInt(jTextFieldPassport.getText())));
                jTextFieldEmail.setText(first);
                jComboBoxCountry.setSelectedItem(control.checkPassportCountry(Integer.parseInt(jTextFieldPassport.getText())));
                jTextFieldSurname.setText(control.checkPassportSurname(Integer.parseInt(jTextFieldPassport.getText())));
                jTextFieldPhone.setText("" + control.checkPassportPhone(Integer.parseInt(jTextFieldPassport.getText())));
                jComboBoxEmail.setSelectedItem(second);
                jLabel11.setVisible(true);
                jSpinnerStayingPeriod.setEnabled(true);
                jCheckBoxDepositPayed.setEnabled(true);
                jXDatePickerClientRegistration.setEnabled(true);

                JOptionPane.showMessageDialog(null, "Guest found, Information added in fields.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                jTextFieldName.setEnabled(true);
                jTextFieldSurname.setEnabled(true);
                jTextFieldAddress.setEnabled(true);
                jComboBoxCountry.setEnabled(true);
                jTextFieldPhone.setEnabled(true);
                jTextFieldEmail.setEnabled(true);
                jComboBoxEmail.setEnabled(true);
                jTextFieldAgency.setEnabled(true);
                jSpinnerStayingPeriod.setEnabled(true);
                jCheckBoxDepositPayed.setEnabled(true);
                jXDatePickerClientRegistration.setEnabled(true);
                jListRooms.setEnabled(true);
                jTextFieldName.setText("");
                jTextFieldSurname.setText("");
                jTextFieldAddress.setText("");
                jTextFieldPhone.setText("");
                jTextFieldEmail.setText("");
                jTextFieldAgency.setText("");
                JOptionPane.showMessageDialog(null, "Guest is not registered, fill in Information.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            if (firstGuest == true) {
                jSpinnerStayingPeriod.setEnabled(false);
                jCheckBoxDepositPayed.setEnabled(false);
                jXDatePickerClientRegistration.setEnabled(false);
                jListRooms.setEnabled(false);
            }
        } catch (NumberFormatException exeption) {
            JOptionPane.showMessageDialog(null, "Not an integer : " + exeption, "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCheckPassportActionPerformed

    private void jTableReservationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableReservationsMouseClicked
        Reservation reservation = control.getReservationInfo(Integer.parseInt(jTableReservations.getValueAt(jTableReservations.getSelectedRow(), 0).toString()));
        jTextFieldReservationID.setText(reservation.getReservation_no() + "");
        jXDatePickerClientArrival.setDate(reservation.getClient_arrival());
        jXDatePickerClientDeparture.setDate(reservation.getClient_departure());
        jXDatePickerReservationDate.setDate(reservation.getResercation_date());
        jTextFieldClientIDReservation.setText(reservation.getClient_no() + "");
        jTextFieldRoomReservation.setText(reservation.getRoom_no() + "");
        if (reservation.getDeposit().equals("Y")) {
            jCheckBoxDepositPayedUpdate.setSelected(true);
        } else {
            jCheckBoxDepositPayedUpdate.setSelected(false);
        }
        jButtonChangeReservation.setEnabled(true);
    }//GEN-LAST:event_jTableReservationsMouseClicked

    private void jTableSportInstructorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSportInstructorMouseClicked
        if (jTableSportInstructor.isEnabled()) {
            SportInstructor sportBooking = control.getConnectionBetweenEmployeeandSportName(Integer.parseInt(jTableSportInstructor.getValueAt(jTableSportInstructor.getSelectedRow(), 0).toString()));
            jTextFieldSportInstructorSequence.setText(sportBooking.getSequence_no() + "");
            jTextFieldSportInstructorEmployeeNo.setText(sportBooking.getInstructor_no() + "");
            jTextFieldSportInstructorSportName.setText(sportBooking.getSport_name());
        }
    }//GEN-LAST:event_jTableSportInstructorMouseClicked

    private void jButtonSportInstructorCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportInstructorCreateActionPerformed
        control.lockingSportInstructorMapper();
        jTextFieldSportInstructorEmployeeNo.setVisible(false);
        jTextFieldSportInstructorSportName.setVisible(false);
        jTextFieldSportInstructorSequence.setVisible(false);
        jComboBoxSportInstructorEmployeeNo.setVisible(true);
        jComboBoxSportInstructorSportName.setVisible(true);
        jTableSportInstructor.setEnabled(false);
        jLabel50.setText("Sequence_no will be auto-generated.");
        lockingLayeredPaneSportInstructor();
    }//GEN-LAST:event_jButtonSportInstructorCreateActionPerformed

    private void jButtonSportInstructorUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportInstructorUpdateActionPerformed
        control.lockingSportInstructorMapper();
        jTextFieldSportInstructorEmployeeNo.setVisible(false);
        jTextFieldSportInstructorSportName.setVisible(false);
        jTextFieldSportInstructorSequence.setVisible(false);
        jComboBoxSportInstructorSequence.setVisible(true);
        jComboBoxSportInstructorEmployeeNo.setVisible(true);
        jComboBoxSportInstructorSportName.setVisible(true);
        jTableSportInstructor.setEnabled(false);
        lockingLayeredPaneSportInstructor();
    }//GEN-LAST:event_jButtonSportInstructorUpdateActionPerformed

    private void jButtonSportInstructorDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportInstructorDeleteActionPerformed
        control.lockingSportInstructorMapper();
        jTextFieldSportInstructorEmployeeNo.setVisible(false);
        jTextFieldSportInstructorSportName.setVisible(false);
        jTextFieldSportInstructorSequence.setVisible(false);
        jComboBoxSportInstructorSequence.setVisible(true);
        jLabelEmployeeNo1.setText("Choose sequence no for deletion");
        jLabel47.setVisible(false);
        lockingLayeredPaneSportInstructor();
    }//GEN-LAST:event_jButtonSportInstructorDeleteActionPerformed

    private void jTextFieldSportInstructorEmployeeNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportInstructorEmployeeNoActionPerformed
    }//GEN-LAST:event_jTextFieldSportInstructorEmployeeNoActionPerformed

    private void jTextFieldSportInstructorSportNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportInstructorSportNameActionPerformed
    }//GEN-LAST:event_jTextFieldSportInstructorSportNameActionPerformed

    private void jButtonSportInstructorExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSportInstructorExecuteActionPerformed
        if (jComboBoxSportInstructorEmployeeNo.isVisible() && jComboBoxSportInstructorSequence.isVisible()
                && jComboBoxSportInstructorSportName.isVisible()) {
            control.updateSportInstructorTBL(Integer.parseInt(jComboBoxSportInstructorSequence.getSelectedItem().toString()), Integer.parseInt(jComboBoxSportInstructorEmployeeNo.getSelectedItem().toString()), jComboBoxSportInstructorSportName.getSelectedItem().toString());
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Sport-Instructor connection has been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else if (jComboBoxSportInstructorEmployeeNo.isVisible() && !jComboBoxSportInstructorSequence.isVisible()
                && jComboBoxSportInstructorSportName.isVisible()) {
            control.creatingNewSportInstructorTBLConnection(Integer.parseInt(jComboBoxSportInstructorEmployeeNo.getSelectedItem().toString()), jComboBoxSportInstructorSportName.getSelectedItem().toString());
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Sport-Instructor connection has been initialised.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            control.deleteInstructorOfSports(Integer.parseInt(jComboBoxSportInstructorSequence.getSelectedItem().toString()));
            control.endTheProcessOfEditingDB();
            JOptionPane.showMessageDialog(null, "Sport-Instructor connection has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
        }
        fillingInSportInstructorTable();
        JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        jLayeredPaneSportInstructor.setVisible(false);
        restartTheGUIMenues();
    }//GEN-LAST:event_jButtonSportInstructorExecuteActionPerformed

    private void jMenuItemSportInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSportInstructorActionPerformed
        jLayeredPaneSportInstructor.setVisible(true);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jButtonSportInstructorExecute.setEnabled(false);
        jButtonSportInstructorCreate.setEnabled(true);
        jButtonSportInstructorUpdate.setEnabled(true);
        jButtonSportInstructorDelete.setEnabled(true);
        jComboBoxSportInstructorEmployeeNo.setVisible(false);
        jComboBoxSportInstructorSportName.setVisible(false);
        jComboBoxSportInstructorSequence.setVisible(false);
        jTableSportInstructor.setEnabled(true);
        jTextFieldSportInstructorSequence.setVisible(true);
        jLabel50.setText("Sequence:");
        jLabelEmployeeNo1.setText("Employee:");
        jLabel47.setVisible(true);
        jTextFieldSportInstructorSequence.setText("");
        jTextFieldSportInstructorEmployeeNo.setText("");
        jTextFieldSportInstructorSportName.setText("");
        jTextFieldSportInstructorSequence.setVisible(true);
        jTextFieldSportInstructorEmployeeNo.setVisible(true);
        jTextFieldSportInstructorSportName.setVisible(true);
        fillingInSportInstructorTable();

    }//GEN-LAST:event_jMenuItemSportInstructorActionPerformed

    private void jButtonLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogInActionPerformed
        String username = JOptionPane.showInputDialog("Enter username: ");
        if (username != null) {
            if (control.getUserInformation(username) != null) {
                if (control.getUserInformation(username).getPassword().equals(JOptionPane.showInputDialog("Enter password: "))) {
                    if (username.contains("cl_")) {
                        control.startTheProcessOfEditingDB();
                        jMenuClientsRequests.setEnabled(false);
                        jMenuHotelAdministration.setEnabled(false);
                        jMenuFacilitiesAdministration.setEnabled(false);
                        jMenuSportBooking.setEnabled(true);
                        jButtonLogIn.setVisible(false);
                        JOptionPane.showMessageDialog(null, "Welcome, Mr/Mrs. " + control.getParticularClient(control.getUserInformation(username).getPersonal_no()).toStringNames(), "Admin", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        control.startTheProcessOfEditingDB();
                        jMenuClientsRequests.setEnabled(true);
                        jMenuHotelAdministration.setEnabled(true);
                        jMenuFacilitiesAdministration.setEnabled(true);
                        jMenuSportBooking.setEnabled(false);
                        jButtonLogIn.setVisible(false);
                        JOptionPane.showMessageDialog(null, "***ALL ACCESS GRANTED***\nWelcome to Admin Menu " + control.getEmployeeInfo(control.getUserInformation(username).getPersonal_no()), ".\nHave a nice working day.", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Wrong password.", "ERROR", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Wrong username.", "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Empty fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLogInActionPerformed

    private void jComboBoxGuestsNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGuestsNumberActionPerformed
        jButtonAddReservation.setEnabled(true);
    }//GEN-LAST:event_jComboBoxGuestsNumberActionPerformed

    private void jXDatePickerClientArrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerClientArrivalActionPerformed

    }//GEN-LAST:event_jXDatePickerClientArrivalActionPerformed

    private void jXDatePickerClientDepartureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerClientDepartureActionPerformed
    }//GEN-LAST:event_jXDatePickerClientDepartureActionPerformed

    private void jMenuItemSportBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSportBookingActionPerformed
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLabelSportBookingNo.setText("Booking no:");
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneAccounts.setVisible(false);
        jLayeredPaneSportBooking.setVisible(true);
        jButtonSportBookingCreation.setEnabled(true);
        jButtonSportBookingDelete.setEnabled(true);
        jButtonSportBookingUpdate.setEnabled(true);
        jButtonSportBookingExecute.setEnabled(false);
        jTextFieldSportBookingBookingNo.setEnabled(false);
        jTextFieldSportBookingBookingNo.setVisible(true);
        jTextFieldSportBookingClientNo.setVisible(true);
        jTextFieldSportBookingFieldNo.setVisible(true);
        jTextFieldSportBookingFieldNo.setVisible(true);
        jTextFieldSportBookingInstructorNo.setVisible(true);
        jTextFieldSportBookingBookingHour.setVisible(true);
        jComboBoxSportBookingFieldNo.setVisible(false);
        jComboBoxSportBookingClientNo.setVisible(false);
        jComboBoxSportBookingInstructorNo.setVisible(false);
        jComboBoxSportInstructorPrice.setVisible(false);
        jComboBoxSportBookingBookingNo.setVisible(false);
        jComboBoxBookingHour.setVisible(false);
        jLabel42.setVisible(true);
        jLabel43.setVisible(true);
        jLabel44.setVisible(true);
        jLabel45.setVisible(true);
        jLabel46.setVisible(true);
        jXDatePickerBookingDate.setVisible(true);
        jTableSportBooking.setEnabled(true);
        fillingInLayeredPaneSportBooking();
    }//GEN-LAST:event_jMenuItemSportBookingActionPerformed

    private void jMenuHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHomeActionPerformed
    }//GEN-LAST:event_jMenuHomeActionPerformed

    private void jMenuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuHomeMouseClicked
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneSportBookingGuest.setVisible(false);
        jLayeredPaneMain.setVisible(true);
        jButtonLogIn.setVisible(true);
    }//GEN-LAST:event_jMenuHomeMouseClicked

    private void jButtonSportCreationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSportCreationMouseReleased
        fillinginLayeredPaneSports();
    }//GEN-LAST:event_jButtonSportCreationMouseReleased

    private void jButtonSportUpdatingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSportUpdatingMouseReleased
        fillinginLayeredPaneSports();
    }//GEN-LAST:event_jButtonSportUpdatingMouseReleased

    private void jButtonSportDeletionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSportDeletionMouseReleased
        fillinginLayeredPaneSports();
    }//GEN-LAST:event_jButtonSportDeletionMouseReleased

    private void jButtonFieldCreationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFieldCreationMouseReleased
        fillingInLayeredPaneFields();
    }//GEN-LAST:event_jButtonFieldCreationMouseReleased

    private void jButtonFieldUpdatingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFieldUpdatingMouseReleased
        fillingInLayeredPaneFields();
    }//GEN-LAST:event_jButtonFieldUpdatingMouseReleased

    private void jButtonFieldDeletionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFieldDeletionMouseReleased
        fillingInLayeredPaneFields();
    }//GEN-LAST:event_jButtonFieldDeletionMouseReleased

    private void jButtonEmployeeCreationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEmployeeCreationMouseReleased
        fillinginLayeredPaneEmployee();
    }//GEN-LAST:event_jButtonEmployeeCreationMouseReleased

    private void jButtonEmployeeUpdatingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEmployeeUpdatingMouseReleased
        fillinginLayeredPaneEmployee();
    }//GEN-LAST:event_jButtonEmployeeUpdatingMouseReleased

    private void jButtonEmployeeDeletionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEmployeeDeletionMouseReleased
        fillinginLayeredPaneEmployee();
    }//GEN-LAST:event_jButtonEmployeeDeletionMouseReleased

    private void jTextFieldSportInstructorSequenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSportInstructorSequenceActionPerformed
    }//GEN-LAST:event_jTextFieldSportInstructorSequenceActionPerformed

    private void jButtonSportInstructorCreateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSportInstructorCreateMouseReleased
        fillingInSportInstructorTable();
    }//GEN-LAST:event_jButtonSportInstructorCreateMouseReleased

    private void jButtonSportInstructorUpdateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSportInstructorUpdateMouseReleased
        fillingInSportInstructorTable();
    }//GEN-LAST:event_jButtonSportInstructorUpdateMouseReleased

    private void jButtonSportInstructorDeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSportInstructorDeleteMouseReleased
        fillingInSportInstructorTable();
    }//GEN-LAST:event_jButtonSportInstructorDeleteMouseReleased

    private void jMenuItemAccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAccountsActionPerformed
        jLayeredPaneNewReservation.setVisible(false);
        jLayeredPaneReservations.setVisible(false);
        jLayeredPaneShowingGuestInformation.setVisible(false);
        jLayeredPaneFreeRooms.setVisible(false);
        jLayeredPaneFields.setVisible(false);
        jLayeredPaneSports.setVisible(false);
        jLayeredPaneEmployee.setVisible(false);
        jLayeredPaneSportBooking.setVisible(false);
        jLayeredPaneSportInstructor.setVisible(false);
        jLayeredPaneSportBookingGuest.setVisible(false);
        jLayeredPaneMain.setVisible(false);
        jLayeredPaneAccounts.setVisible(true);
        jComboBoxAccountManagementID.setVisible(false);
        jTextFieldUsername.setText("");
        jTextFieldPassword.setText("");
        jTextFieldAccountManagementID.setText("");
        jTextFieldUsername.setEditable(false);
        jTextFieldPassword.setEditable(false);
        jComboBoxAccountType.setEnabled(false);
        jTextFieldAccountManagementID.setEditable(false);
        jButtonAccountManagementCreate.setEnabled(true);
        jButtonAccountManagementDelete.setEnabled(true);
        jButtonAccountManagementExecute.setEnabled(false);
        jComboBoxAccountType.setVisible(true);
        jTextFieldUsername.setVisible(true);
        jTextFieldPassword.setVisible(true);
        jTextFieldAccountManagementID.setVisible(true);
        jLabel55.setVisible(true);
        jLabel54.setVisible(true);
        jLabel53.setVisible(true);
        jLabel52.setVisible(true);
        jLabel54.setText("Add:");
        jTableEmployeesAccounts.setEnabled(true);
        jTableGuestsAccounts.setEnabled(true);
        fillinginLayeredPaneAccounts();
    }//GEN-LAST:event_jMenuItemAccountsActionPerformed

    private void jTableEmployeesAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEmployeesAccountsMouseClicked
        if (jTableEmployeesAccounts.isEnabled()) {
            User user = control.getUserInformation(jTableEmployeesAccounts.getValueAt(jTableEmployeesAccounts.getSelectedRow(), 0).toString());
            jTextFieldUsername.setText(user.getUsername());
            jTextFieldPassword.setText(user.getPassword());
            jTextFieldAccountManagementID.setText(user.getPersonal_no() + "");
            jComboBoxAccountType.setSelectedIndex(2);
            jTableGuestsAccounts.clearSelection();
        }

    }//GEN-LAST:event_jTableEmployeesAccountsMouseClicked

    private void jTableGuestsAccountsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableGuestsAccountsMouseClicked
        if (jTableGuestsAccounts.isEnabled()) {
            User user = control.getUserInformation(jTableGuestsAccounts.getValueAt(jTableGuestsAccounts.getSelectedRow(), 0).toString());
            jTextFieldUsername.setText(user.getUsername());
            jTextFieldPassword.setText(user.getPassword());
            jTextFieldAccountManagementID.setText(user.getPersonal_no() + "");
            jComboBoxAccountType.setSelectedIndex(1);
            jTableEmployeesAccounts.clearSelection();
        }
    }//GEN-LAST:event_jTableGuestsAccountsMouseClicked

    private void jComboBoxAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAccountTypeActionPerformed
        if (jComboBoxAccountType.getSelectedItem().equals("Guest")) {
            ArrayList<Client> listofClients = control.getAllClients();
            String arrayOfClientIDs[] = new String[listofClients.size()];
            for (int i = 0; i < listofClients.size(); i++) {
                arrayOfClientIDs[i] = listofClients.get(i).getClient_no() + "";
            }
            jComboBoxAccountManagementID.setModel(new DefaultComboBoxModel(arrayOfClientIDs));
        } else if (jComboBoxAccountType.getSelectedItem().equals("Employee")) {
            ArrayList<Employee> listofEmployees = control.getAllEmployees();
            String arrayOfEmployeeIDs[] = new String[listofEmployees.size()];
            for (int i = 0; i < listofEmployees.size(); i++) {
                arrayOfEmployeeIDs[i] = listofEmployees.get(i).getEmployee_no() + "";
            }
            jComboBoxAccountManagementID.setModel(new DefaultComboBoxModel(arrayOfEmployeeIDs));
        }
    }//GEN-LAST:event_jComboBoxAccountTypeActionPerformed

    private void jButtonAccountManagementCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccountManagementCreateActionPerformed
        jTextFieldUsername.setText("");
        jTextFieldPassword.setText("");
        jTextFieldAccountManagementID.setText("");
        jButtonAccountManagementCreate.setEnabled(false);
        jButtonAccountManagementDelete.setEnabled(false);
        jButtonAccountManagementExecute.setEnabled(true);
        jTableEmployeesAccounts.setEnabled(false);
        jTableGuestsAccounts.setEnabled(false);
        jTextFieldUsername.setEditable(true);
        jTextFieldPassword.setEditable(true);
        jTextFieldAccountManagementID.setEditable(true);
        jTextFieldAccountManagementID.setVisible(false);
        jComboBoxAccountType.setSelectedIndex(0);
        jComboBoxAccountType.setEnabled(true);
        jComboBoxAccountManagementID.setVisible(true);
    }//GEN-LAST:event_jButtonAccountManagementCreateActionPerformed

    private void jButtonAccountManagementDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccountManagementDeleteActionPerformed
        jButtonAccountManagementCreate.setEnabled(false);
        jButtonAccountManagementDelete.setEnabled(false);
        jButtonAccountManagementExecute.setEnabled(true);
        jComboBoxAccountType.setVisible(false);
        jTextFieldPassword.setVisible(false);
        jTextFieldAccountManagementID.setVisible(false);
        jLabel55.setVisible(false);
        jLabel52.setVisible(false);
        jLabel53.setVisible(false);
        jLabel54.setText("Choose username for deletion:");
        jTableEmployeesAccounts.clearSelection();
        jTableGuestsAccounts.clearSelection();
        jTextFieldUsername.setText("");
    }//GEN-LAST:event_jButtonAccountManagementDeleteActionPerformed

    private void jButtonAccountManagementExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAccountManagementExecuteActionPerformed
        if (jTextFieldUsername.isVisible() && jTextFieldPassword.isVisible()) {
            if (jTextFieldUsername.getText().isEmpty() || jTextFieldPassword.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Empty fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } else if (jComboBoxAccountType.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Account type not chosen.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } else {
                String accounttype = null;
                if (jComboBoxAccountType.getSelectedIndex() == 1) {
                    accounttype = "cl_";
                } else {
                    accounttype = "emp_";
                }
                control.creatingNewLogin(accounttype + jTextFieldUsername.getText(), jTextFieldPassword.getText(), Integer.parseInt(jComboBoxAccountManagementID.getSelectedItem().toString()), true);
                control.endTheProcessOfEditingDB();
                JOptionPane.showMessageDialog(null, "Account '" + accounttype + jTextFieldUsername.getText() + "' has been created.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            control.deleteUserAccount(jTextFieldUsername.getText());
            JOptionPane.showMessageDialog(null, "Account '" + jTextFieldUsername.getText() + "' has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            control.endTheProcessOfEditingDB();
        }
        fillinginLayeredPaneAccounts();
        JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
        jLayeredPaneAccounts.setVisible(false);
        restartTheGUIMenues();

    }//GEN-LAST:event_jButtonAccountManagementExecuteActionPerformed

    private void jComboBoxAccountManagementIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAccountManagementIDActionPerformed
    }//GEN-LAST:event_jComboBoxAccountManagementIDActionPerformed

    private void jXDatePickerReservationDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerReservationDateActionPerformed
    }//GEN-LAST:event_jXDatePickerReservationDateActionPerformed

    private void jButtonDeleteReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteReservationActionPerformed
        if (!jTextFieldReservationID.getText().isEmpty()) {
            control.deleteReservation(Integer.parseInt(jTextFieldReservationID.getText()));
            control.endTheProcessOfEditingDB();
            fillingInTableFromLayeredPaneReservation();
            JOptionPane.showMessageDialog(null, "Information in Reservation table has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
            jLayeredPaneReservations.setVisible(false);
            restartTheGUIMenues();
        } else {
            JOptionPane.showMessageDialog(null, "You need to chose a person, if you want to delete", "Try again.", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButtonDeleteReservationActionPerformed

    private void jTableSportBookingForClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSportBookingForClientMouseClicked
        if (jTableSportBookingForClient.isEnabled()) {
            SportBooking sportBooking = control.getSportBookingInfo(Integer.parseInt(jTableSportBookingForClient.getValueAt(jTableSportBookingForClient.getSelectedRow(), 0).toString()));
            jTextFieldBookingNoSportBookingByClient.setText(sportBooking.getSportBooking_no() + "");
            jTextFieldFieldNoSportBookingByClient.setText(sportBooking.getField_no() + "");
            jXDatePickerBookingDateSportBookingByClient.setDate(sportBooking.getSportBooking_Date());
            jTextFieldBookingHourSportBookingByClient.setText(sportBooking.getSportBooking_Hour());
            jTextFieldInstructorNoSportBookingByClient.setText(sportBooking.getInstructor_no() + "");
        }
    }//GEN-LAST:event_jTableSportBookingForClientMouseClicked

    private void jButtonCreateBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateBookingByClientActionPerformed
        lockingInLayeredPaneSportBookingByClients();
        jTextFieldBookingNoSportBookingByClient.setVisible(false);
        jLabelBookingNoSportBookingByClient.setText("Auto-generated");
        jTextFieldClientNoSportBookingByClient.setVisible(false);
        jTextFieldFieldNoSportBookingByClient.setVisible(false);
        jTextFieldInstructorNoSportBookingByClient.setVisible(false);
        jTextFieldBookingHourSportBookingByClient.setVisible(false);
        jXDatePickerBookingDateSportBookingByClient.setDate(null);
        jComboBoxBookingHourSportBookingByClient.setVisible(true);
        jComboBoxInstructorNoSportBookingByClient.setVisible(true);
        jComboBoxFieldNoSportBookingByClient.setVisible(true);
        jTableSportBookingForClient.setEnabled(false);
    }//GEN-LAST:event_jButtonCreateBookingByClientActionPerformed

    private void jButtonUpdateBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateBookingByClientActionPerformed
        lockingInLayeredPaneSportBookingByClients();
        jTextFieldBookingNoSportBookingByClient.setVisible(false);
        jLabelBookingNoSportBookingByClient.setText("Booking no:");
        jTextFieldFieldNoSportBookingByClient.setVisible(false);
        jTextFieldInstructorNoSportBookingByClient.setVisible(false);
        jTextFieldBookingHourSportBookingByClient.setVisible(false);
        jComboBoxFieldNoSportBookingByClient.setVisible(true);
        jComboBoxInstructorNoSportBookingByClient.setVisible(true);
        jComboBoxBookingNoSportBookingByClients.setVisible(true);
        jComboBoxBookingHourSportBookingByClient.setVisible(true);
        jTableSportBookingForClient.setEnabled(false);
        jXDatePickerBookingDateSportBookingByClient.setDate(null);
    }//GEN-LAST:event_jButtonUpdateBookingByClientActionPerformed

    private void jButtonDeleteBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteBookingByClientActionPerformed
        lockingInLayeredPaneSportBookingByClients();
        jTextFieldBookingNoSportBookingByClient.setVisible(false);
        jLabelBookingNoSportBookingByClient.setText("Choose booking no for deletion:");
        jTextFieldClientNoSportBookingByClient.setVisible(false);
        jTextFieldClientNoSportBookingByClient.setEditable(false);
        jTextFieldFieldNoSportBookingByClient.setVisible(false);
        jTextFieldInstructorNoSportBookingByClient.setVisible(false);
        jTextFieldBookingHourSportBookingByClient.setVisible(false);
        jComboBoxBookingNoSportBookingByClients.setVisible(true);
        jXDatePickerBookingDateSportBookingByClient.setVisible(false);
        jLabel60.setVisible(false);
        jLabel61.setVisible(false);
        jLabel62.setVisible(false);
        jLabel63.setVisible(false);
        jLabel64.setVisible(false);
        jTableSportBookingForClient.setEnabled(false);
    }//GEN-LAST:event_jButtonDeleteBookingByClientActionPerformed

    private void jComboBoxBookingNoSportBookingByClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBookingNoSportBookingByClientsActionPerformed
    }//GEN-LAST:event_jComboBoxBookingNoSportBookingByClientsActionPerformed

    private void jTextFieldBookingNoSportBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBookingNoSportBookingByClientActionPerformed
    }//GEN-LAST:event_jTextFieldBookingNoSportBookingByClientActionPerformed

    private void jTextFieldFieldNoSportBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFieldNoSportBookingByClientActionPerformed
    }//GEN-LAST:event_jTextFieldFieldNoSportBookingByClientActionPerformed

    private void jButtonExecuteSportBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExecuteSportBookingByClientActionPerformed
        if (!"Choose booking no for deletion:".equals(jLabelBookingNoSportBookingByClient.getText()) && jXDatePickerBookingDateSportBookingByClient.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Date misssing.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            control.lockingSportBookingMapper();
            JOptionPane.showMessageDialog(null, "Changes has been accepted. Table Locked. ", "Success.", JOptionPane.INFORMATION_MESSAGE);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }

            switch (jLabelBookingNoSportBookingByClient.getText()) {
                case "Auto-generated": {
                    java.util.Date date = jXDatePickerBookingDateSportBookingByClient.getDate();
                    java.sql.Date sqlBookingDate = new java.sql.Date(date.getTime());
                    int clientno = Integer.parseInt(jTextFieldClientNoSportBookingByClient.getText());
                    int fieldno = Integer.parseInt(jComboBoxFieldNoSportBookingByClient.getSelectedItem().toString());
                    String hour = jComboBoxBookingHourSportBookingByClient.getSelectedItem().toString();
                    int instructorno = Integer.parseInt(jComboBoxInstructorNoSportBookingByClient.getSelectedItem().toString());
                    control.creatingNewSportBooking(clientno, fieldno, sqlBookingDate, hour, instructorno);
                    control.endTheProcessOfEditingDB();
                    JOptionPane.showMessageDialog(null, "Sport Booking has been created.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
                case "Choose booking no for deletion:": {
                    int bookingno = Integer.parseInt(jComboBoxBookingNoSportBookingByClients.getSelectedItem().toString());
                    jTextFieldClientNoSportBookingByClient.setText(control.getSportBookingInfo(bookingno).getClient_no() + "");
                    control.deleteSportBooking(bookingno);
                    control.endTheProcessOfEditingDB();
                    JOptionPane.showMessageDialog(null, "Sport Booking has been deleted.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
                default: {
                    java.util.Date date = jXDatePickerBookingDateSportBookingByClient.getDate();
                    java.sql.Date sqlBookingDate = new java.sql.Date(date.getTime());
                    int bookingno = Integer.parseInt(jComboBoxBookingNoSportBookingByClients.getSelectedItem().toString());
                    int clientno = Integer.parseInt(jTextFieldClientNoSportBookingByClient.getText());
                    int fieldno = Integer.parseInt(jComboBoxFieldNoSportBookingByClient.getSelectedItem().toString());
                    String hour = jComboBoxBookingHourSportBookingByClient.getSelectedItem().toString();
                    int instructorno = Integer.parseInt(jComboBoxInstructorNoSportBookingByClient.getSelectedItem().toString());
                    System.out.println(bookingno + "," + clientno + "," + fieldno + "," + sqlBookingDate + "," + hour + "," + instructorno);
                    control.updateSportBookingInformation(bookingno, clientno, fieldno, sqlBookingDate, hour, instructorno);
                    control.endTheProcessOfEditingDB();
                    JOptionPane.showMessageDialog(null, "Sport Booking has been updated.", "Success.", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
            fillingInLayeredPaneSportBookingByClient();
            JOptionPane.showMessageDialog(null, "Restarting system...", "Success.", JOptionPane.OK_OPTION);
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Thread.currentThread().interrupt();
            }
            jLayeredPaneSportBookingGuest.setVisible(false);
            restartTheGUIMenues();
        }

    }//GEN-LAST:event_jButtonExecuteSportBookingByClientActionPerformed

    private void jXDatePickerBookingDateSportBookingByClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePickerBookingDateSportBookingByClientActionPerformed
    }//GEN-LAST:event_jXDatePickerBookingDateSportBookingByClientActionPerformed

    private void addGuest() {
        Calendar cal = Calendar.getInstance();
        cal.clear();

        java.util.Date utilResDate = new java.util.Date(Calendar.getInstance().getTimeInMillis());
        java.sql.Date sqlReservationDate = new java.sql.Date(utilResDate.getTime());
        java.util.Date date2 = jXDatePickerClientRegistration.getDate();
        java.sql.Date sqlArrival = new java.sql.Date(date2.getTime());
        cal.setTime(date2);
        int nights = (Integer) jSpinnerStayingPeriod.getValue();
        cal.add(Calendar.DATE, nights);
        java.util.Date departure = new java.util.Date(cal.getTimeInMillis());

        java.sql.Date sqlDeparture = new java.sql.Date(departure.getTime());

        String stringSelectedRoom = jListRooms.getSelectedValue().toString();
        int selectedRoom = Integer.parseInt(stringSelectedRoom);
        String depositpaid;

        if (jCheckBoxDepositPayed.isSelected()) {
            depositpaid = "Y";
        } else {
            depositpaid = "N";
        }

        control.creatingNewClient(jTextFieldName.getText(), jTextFieldSurname.getText(), jTextFieldAddress.getText());
        control.creatingNewClientPrvInf(Integer.parseInt(jTextFieldPassport.getText()), jComboBoxCountry.getSelectedItem().toString(), Integer.parseInt(jTextFieldPhone.getText()), jTextFieldEmail.getText() + "@" + (String) jComboBoxEmail.getSelectedItem(), jTextFieldAgency.getText());
        control.creatingNewReservation(sqlArrival, sqlDeparture, selectedRoom, depositpaid, sqlReservationDate);

        Random randomize = new Random();
        String username = "cl_" + jTextFieldName.getText().substring(0, 2) + jTextFieldSurname.getText().substring(0, 2) + randomize.nextInt(99);
        String password = jTextFieldPassport.getText().substring(0, 4) + randomize.nextInt(99);
        control.creatingNewLogin(username, password, 0, true);
        //E-mails
        Client clientForEMail = new Client(jTextFieldName.getText(), jTextFieldSurname.getText(), jTextFieldAddress.getText(), Integer.parseInt(jTextFieldPassport.getText()), jComboBoxCountry.getSelectedItem().toString(), Integer.parseInt(jTextFieldPhone.getText()), jTextFieldEmail.getText() + "@" + (String) jComboBoxEmail.getSelectedItem());
        clientsInfoForEmailsAL.add(clientForEMail);
        User usersForEMail = new User(username, password);
        clientaccountsForEmailsAL.add(usersForEMail);
        reservationForEmails = new Reservation(sqlArrival, sqlDeparture, selectedRoom, depositpaid, sqlReservationDate);

    }

    private void addSecondaryGuest() {

        String name = jTextFieldName.getText();
        String surname = jTextFieldSurname.getText();
        String address = jTextFieldAddress.getText();

        control.creatingSecondaryClients(name, surname, address);
        control.creatingNewClientPrvInf(Integer.parseInt(jTextFieldPassport.getText()), (String) jComboBoxCountry.getSelectedItem(), Integer.parseInt(jTextFieldPhone.getText()), jTextFieldEmail.getText() + "@" + (String) jComboBoxEmail.getSelectedItem(), jTextFieldAgency.getText());
        Random randomize = new Random();
        String username = "cl_" + jTextFieldName.getText().substring(0, 2) + jTextFieldSurname.getText().substring(0, 2) + randomize.nextInt(99);
        String password = jTextFieldPassport.getText().substring(0, 4) + randomize.nextInt(99);
        control.creatingNewLogin(username, password, 0, true);
        Client clientForEMail = new Client(jTextFieldName.getText(), jTextFieldSurname.getText(), jTextFieldAddress.getText(), Integer.parseInt(jTextFieldPassport.getText()), jComboBoxCountry.getSelectedItem().toString(), Integer.parseInt(jTextFieldPhone.getText()), jTextFieldEmail.getText() + "@" + (String) jComboBoxEmail.getSelectedItem());
        clientsInfoForEmailsAL.add(clientForEMail);
        User usersForEMail = new User(username, password);
        clientaccountsForEmailsAL.add(usersForEMail);
    }

    private void clearReservationFields() {
        jTextFieldName.setText("");
        jTextFieldSurname.setText("");
        jTextFieldAddress.setText("");
        jTextFieldPassport.setText("");
        jTextFieldPhone.setText("");
        jTextFieldEmail.setText("");
        jTextFieldAgency.setText("");
    }

    private void lockReservationFields() {
        jSpinnerStayingPeriod.setEnabled(false);
        jComboBoxRoomType.setEnabled(false);
        jListRooms.setEnabled(false);
    }

    private void fillingInTableFromLayeredPaneReservation() {
        ArrayList<Reservation> listOfReservations = control.getAllReservations();

        twoDimensionalArrayForTables = new Object[listOfReservations.size()][7];
        for (int i = 0; i < listOfReservations.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfReservations.get(i).getReservation_no();
            twoDimensionalArrayForTables[i][1] = listOfReservations.get(i).getClient_no();
            twoDimensionalArrayForTables[i][2] = listOfReservations.get(i).getClient_arrival();
            twoDimensionalArrayForTables[i][3] = listOfReservations.get(i).getClient_departure();
            twoDimensionalArrayForTables[i][4] = listOfReservations.get(i).getRoom_no();
            twoDimensionalArrayForTables[i][5] = listOfReservations.get(i).getDeposit();
            twoDimensionalArrayForTables[i][6] = listOfReservations.get(i).getResercation_date();
        }

        stringArrayforTables = new String[]{"R NO", "Client NO", "Arrival", "Departure", "Room NO", "Deposit", "Res Date"};
        jTableReservations.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableReservations.getTableHeader().setReorderingAllowed(false);
    }

    private void addExistingGuest() {
        Calendar cal = Calendar.getInstance();
        cal.clear();

        java.util.Date utilResDate = new java.util.Date(Calendar.getInstance().getTimeInMillis());
        java.sql.Date sqlReservationDate = new java.sql.Date(utilResDate.getTime());
        java.util.Date date2 = jXDatePickerClientRegistration.getDate();
        java.sql.Date sqlArrival = new java.sql.Date(date2.getTime());
        cal.setTime(date2);
        int nights = (Integer) jSpinnerStayingPeriod.getValue();
        cal.add(Calendar.DATE, nights);
        java.util.Date departure = new java.util.Date(cal.getTimeInMillis());

        java.sql.Date sqlDeparture = new java.sql.Date(departure.getTime());

        String stringSelectedRoom = jListRooms.getSelectedValue().toString();
        int selectedRoom = Integer.parseInt(stringSelectedRoom);
        String depositpaid;

        if (jCheckBoxDepositPayed.isSelected()) {
            depositpaid = "Y";
        } else {
            depositpaid = "N";
        }

        control.creatingAReservationOfAClientWhoHadAlreadyBeenInTheHotel(sqlArrival, sqlDeparture, selectedRoom, depositpaid, sqlReservationDate, Integer.parseInt(jTextFieldPassport.getText()));
    }

    private void fillingInTableFromLayeredPaneClient() {

        ArrayList<Client> listOfClients = control.getAllClients();
        String arrayOfPassportsNo[] = new String[listOfClients.size()];
        twoDimensionalArrayForTables = new Object[listOfClients.size()][9];
        for (int i = 0; i < listOfClients.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfClients.get(i).getClient_name();
            twoDimensionalArrayForTables[i][1] = listOfClients.get(i).getClient_surname();
            twoDimensionalArrayForTables[i][2] = listOfClients.get(i).getClient_address();
            twoDimensionalArrayForTables[i][3] = listOfClients.get(i).getClient_email();
            twoDimensionalArrayForTables[i][4] = listOfClients.get(i).getClient_passport();
            twoDimensionalArrayForTables[i][5] = listOfClients.get(i).getClient_country();
            twoDimensionalArrayForTables[i][6] = listOfClients.get(i).getClient_phone();
            twoDimensionalArrayForTables[i][7] = listOfClients.get(i).getClient_agency();
            twoDimensionalArrayForTables[i][8] = listOfClients.get(i).getClient_no();
            arrayOfPassportsNo[i] = listOfClients.get(i).getClient_passport() + "";
        }

        stringArrayforTables = new String[]{"Name", "Surname", "Address", "Email", "Passport", "Country", "Phone", "Agency", "Number"};
        jTableClients.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableClients.getTableHeader().setReorderingAllowed(false);
        jComboBoxPassports.setModel(new DefaultComboBoxModel(arrayOfPassportsNo));
    }

    private void fillingInLayeredPaneFields() {
        ArrayList<Field> listOfField = control.getAllFields();
        String arrayOfFieldNo[] = new String[listOfField.size()];
        twoDimensionalArrayForTables = new Object[listOfField.size()][2];
        for (int i = 0; i < listOfField.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfField.get(i).getField_no();
            twoDimensionalArrayForTables[i][1] = listOfField.get(i).getSport_name();
            arrayOfFieldNo[i] = listOfField.get(i).getField_no() + "";
        }
        stringArrayforTables = new String[]{"Field number", "Sport name"};
        jTableSportFields.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableSportFields.getTableHeader().setReorderingAllowed(false);
        jComboBoxFieldsNo.setModel(new DefaultComboBoxModel(arrayOfFieldNo));

        ArrayList<Sport> listOfSports = control.getAllSports();
        String arrayOfSports[] = new String[listOfSports.size()];
        for (int i = 0; i < listOfSports.size(); i++) {
            arrayOfSports[i] = listOfSports.get(i).getSport_name();
        }
        jComboBoxSportNameInjMenuItemField.setModel(new DefaultComboBoxModel(arrayOfSports));
    }

    private void lockingInLayeredPaneFields() {
        jButtonFieldCreation.setEnabled(false);
        jButtonFieldUpdating.setEnabled(false);
        jButtonFieldDeletion.setEnabled(false);
        jButtonFieldExecute.setEnabled(true);
        jTableSportFields.setEnabled(false);
    }

    private void fillinginLayeredPaneSports() {
        ArrayList<Sport> listOfSports = control.getAllSports();
        String arrayOfSport[] = new String[listOfSports.size()];
        String arrayOfInstructorPrices[] = new String[listOfSports.size()];
        twoDimensionalArrayForTables = new Object[listOfSports.size()][4];
        for (int i = 0; i < listOfSports.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfSports.get(i).getSport_name();
            twoDimensionalArrayForTables[i][1] = listOfSports.get(i).getMin_players();
            twoDimensionalArrayForTables[i][2] = listOfSports.get(i).getMax_players();
            twoDimensionalArrayForTables[i][3] = listOfSports.get(i).getPrice_instructor();
            arrayOfSport[i] = listOfSports.get(i).getSport_name();
            arrayOfInstructorPrices[i] = listOfSports.get(i).getPrice_instructor() + "";
        }
        stringArrayforTables = new String[]{"Sport name", "MIN", "MAX", "Instructor Payment"};
        jTableActualSports.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableActualSports.getTableHeader().setReorderingAllowed(false);
        jComboBoxSportName.setModel(new DefaultComboBoxModel(arrayOfSport));
        jComboBoxSportInstructorPrice.setModel(new DefaultComboBoxModel(arrayOfInstructorPrices));
    }

    private void lockinginlayeredPaneSports() {
        jButtonSportExecute.setEnabled(true);
        jButtonSportCreation.setEnabled(false);
        jButtonSportUpdating.setEnabled(false);
        jButtonSportDeletion.setEnabled(false);
        jTableActualSports.setEnabled(false);
    }

    private void fillinginLayeredPaneEmployee() {
        ArrayList<Employee> listOfEmpoyees = control.getAllEmployees();
        twoDimensionalArrayForTables = new Object[listOfEmpoyees.size()][3];
        String arrrayOfEmployeesNo[] = new String[listOfEmpoyees.size()];
        for (int i = 0; i < listOfEmpoyees.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfEmpoyees.get(i).getEmployee_no();
            twoDimensionalArrayForTables[i][1] = listOfEmpoyees.get(i).getEmployee_name();
            twoDimensionalArrayForTables[i][2] = listOfEmpoyees.get(i).getEmployee_position();
            arrrayOfEmployeesNo[i] = listOfEmpoyees.get(i).getEmployee_no() + "";
        }
        stringArrayforTables = new String[]{"Employee", "E. Name", "E. Possition"};
        jTableEmployee.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableEmployee.getTableHeader().setReorderingAllowed(false);
        jComboBoxEmployeeNo.setModel(new DefaultComboBoxModel(arrrayOfEmployeesNo));
    }

    private void lockingInLayeredPaneEmployee() {
        jButtonEmployeeExecute.setEnabled(true);
        jButtonEmployeeUpdating.setEnabled(false);
        jButtonEmployeeCreation.setEnabled(false);
        jButtonEmployeeDeletion.setEnabled(false);
        jTableEmployee.setEnabled(false);
        jTextFieldEmployeeNo.setText("");
        jTextFieldEmployeeName.setText("");
        jTextFieldEmployeePosition.setText("");

    }

    private void fillingInLayeredPaneSportBooking() {
        ArrayList<SportBooking> listOfSportBooking = control.getAllSportBookings();
        String arrayOfSportBookingNo[] = new String[listOfSportBooking.size()];
        twoDimensionalArrayForTables = new Object[listOfSportBooking.size()][6];
        for (int i = 0; i < listOfSportBooking.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfSportBooking.get(i).getSportBooking_no();
            twoDimensionalArrayForTables[i][1] = listOfSportBooking.get(i).getClient_no();
            twoDimensionalArrayForTables[i][2] = listOfSportBooking.get(i).getField_no();
            twoDimensionalArrayForTables[i][3] = listOfSportBooking.get(i).getSportBooking_Date();
            twoDimensionalArrayForTables[i][4] = listOfSportBooking.get(i).getSportBooking_Hour();
            twoDimensionalArrayForTables[i][5] = listOfSportBooking.get(i).getInstructor_no();
            arrayOfSportBookingNo[i] = listOfSportBooking.get(i).getSportBooking_no() + "";
        }
        jComboBoxSportBookingBookingNo.setModel(new DefaultComboBoxModel(arrayOfSportBookingNo));

        ArrayList<Client> allClients = control.getAllClients();
        String arrayOfClientNumbers[] = new String[allClients.size()];
        for (int i = 0; i < allClients.size(); i++) {
            arrayOfClientNumbers[i] = allClients.get(i).getClient_no() + "";
        }

        ArrayList<Field> allFields = control.getAllFields();
        String arrayOfFieldNumbers[] = new String[allFields.size()];
        for (int i = 0; i < allFields.size(); i++) {
            arrayOfFieldNumbers[i] = allFields.get(i).getField_no() + "";
        }

        ArrayList<Employee> allEmployees = control.getAllEmployees();
        String arrayOfEmployeeNumbers[] = new String[allEmployees.size()];
        for (int i = 0; i < allEmployees.size(); i++) {
            arrayOfEmployeeNumbers[i] = allEmployees.get(i).getEmployee_no() + "";
        }
        stringArrayforTables = new String[]{"Booking Number", "Client Number", "Field Number", "Booking Date", "Booking Hour", "Instructor Number"};
        jTableSportBooking.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableSportBooking.getTableHeader().setReorderingAllowed(false);
        jComboBoxSportBookingClientNo.setModel(new DefaultComboBoxModel(arrayOfClientNumbers));
        jComboBoxSportBookingFieldNo.setModel(new DefaultComboBoxModel(arrayOfFieldNumbers));
        jComboBoxSportBookingInstructorNo.setModel(new DefaultComboBoxModel(arrayOfEmployeeNumbers));
    }

    private void lockingInLayeredPaneSportBooking() {
        jButtonSportBookingCreation.setEnabled(false);
        jButtonSportBookingDelete.setEnabled(false);
        jButtonSportBookingUpdate.setEnabled(false);
        jButtonSportBookingExecute.setEnabled(true);
        jTextFieldSportBookingBookingNo.setText("");
        jTextFieldSportBookingClientNo.setText("");
        jTextFieldSportBookingFieldNo.setText("");
        jTextFieldSportBookingBookingHour.setText("");
        jTextFieldSportBookingInstructorNo.setText("");
    }

    private boolean checkingReservationForErrors() {
        boolean mistakeFound = false;
        if (jTextFieldName.getText().isEmpty() || jTextFieldSurname.getText().isEmpty() || jTextFieldAddress.getText().isEmpty()
                || jTextFieldPassport.getText().isEmpty() || jTextFieldPhone.getText().isEmpty() || jTextFieldAgency.getText().isEmpty()
                || jTextFieldEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jTextFieldName.getText().matches(".*[0-9].*") || jTextFieldSurname.getText().matches(".*[0-9].*")
                || jTextFieldAgency.getText().matches(".*[0-9].*")) {
            JOptionPane.showMessageDialog(null, "Integers in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jTextFieldPassport.getText().matches("^[a-zA-Z]+$") || jTextFieldPhone.getText().matches("^[a-zA-Z]+$")) {
            JOptionPane.showMessageDialog(null, "Letters in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jTextFieldPassport.getText().length() != 9) {
            JOptionPane.showMessageDialog(null, "Passport length should be '9' numbers.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jXDatePickerClientRegistration.getDate() == null) {
            JOptionPane.showMessageDialog(null, "You have not chosen a date.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jListRooms.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Room not chosen.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        }
        return mistakeFound;
    }

    private boolean checkingCreateSportForErrors() {
        boolean mistakeFound = false;
        if (jTextFieldSportName.getText().isEmpty() && !jComboBoxSportName.isVisible()) {
            JOptionPane.showMessageDialog(null, "Empty fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jTextFieldSportInstructorPrice.getText().isEmpty()
                || jTextFieldSportMinPPL.getText().isEmpty() || jTextFieldSportMaxPPL.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Empty fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jTextFieldSportName.getText().matches(".*[0-9].*")) {
            JOptionPane.showMessageDialog(null, "Integers in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (jTextFieldSportInstructorPrice.getText().matches("^[a-zA-Z]+$") || jTextFieldSportMinPPL.getText().matches("^[a-zA-Z]+$")
                || jTextFieldSportMaxPPL.getText().matches("^[a-zA-Z]+$")) {
            JOptionPane.showMessageDialog(null, "Letters in forbidden fields.", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        } else if (Integer.parseInt(jTextFieldSportMinPPL.getText()) > Integer.parseInt(jTextFieldSportMaxPPL.getText())) {
            JOptionPane.showMessageDialog(null, "MIN Players > MAX Players", "ERROR", JOptionPane.WARNING_MESSAGE);
            mistakeFound = true;
        }
        return mistakeFound;
    }

    private void restartTheGUIMenues() {
        jMenuClientsRequests.setEnabled(false);
        jMenuHotelAdministration.setEnabled(false);
        jMenuFacilitiesAdministration.setEnabled(false);
        jMenuSportBooking.setEnabled(false);
        jLayeredPaneMain.setVisible(true);
        jButtonLogIn.setVisible(true);
    }

    private void fillingInSportInstructorTable() {
        ArrayList<SportInstructor> listOfSportsAndInstructors = control.getAllSportInstructors();
        twoDimensionalArrayForTables = new Object[listOfSportsAndInstructors.size()][3];
        String arrayOfSequenceSportInstrNo[] = new String[listOfSportsAndInstructors.size()];
        for (int i = 0; i < listOfSportsAndInstructors.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfSportsAndInstructors.get(i).getSequence_no();
            twoDimensionalArrayForTables[i][1] = listOfSportsAndInstructors.get(i).getInstructor_no();
            twoDimensionalArrayForTables[i][2] = listOfSportsAndInstructors.get(i).getSport_name();
            arrayOfSequenceSportInstrNo[i] = listOfSportsAndInstructors.get(i).getSequence_no() + "";
        }
        stringArrayforTables = new String[]{"Sequence no", "Employee", "Sport name"};
        jTableSportInstructor.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableSportInstructor.getTableHeader().setReorderingAllowed(false);
        jComboBoxSportInstructorSequence.setModel(new DefaultComboBoxModel(arrayOfSequenceSportInstrNo));

        ArrayList<Employee> listofEmployees = control.getAllEmployees();
        String arrayOfEmployeeNos[] = new String[listofEmployees.size()];
        for (int i = 0; i < listofEmployees.size(); i++) {
            arrayOfEmployeeNos[i] = listofEmployees.get(i).getEmployee_no() + "";
        }
        jComboBoxSportInstructorEmployeeNo.setModel(new DefaultComboBoxModel(arrayOfEmployeeNos));
        ArrayList<Sport> listOfSPorts = control.getAllSports();
        String arrayOfSports[] = new String[listOfSPorts.size()];
        for (int i = 0; i < listOfSPorts.size(); i++) {
            arrayOfSports[i] = listOfSPorts.get(i).getSport_name();
        }
        jComboBoxSportInstructorSportName.setModel(new DefaultComboBoxModel(arrayOfSports));
    }

    private void lockingLayeredPaneSportInstructor() {
        jButtonSportInstructorCreate.setEnabled(false);
        jButtonSportInstructorUpdate.setEnabled(false);
        jButtonSportInstructorDelete.setEnabled(false);
        jButtonSportInstructorExecute.setEnabled(true);
    }

    private void fillinginLayeredPaneAccounts() {
        ArrayList<User> listOfEmployeeAccounts = control.getAllEmployeeAccounts();
        twoDimensionalArrayForTables = new Object[listOfEmployeeAccounts.size()][3];
        for (int i = 0; i < listOfEmployeeAccounts.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfEmployeeAccounts.get(i).getUsername();
            twoDimensionalArrayForTables[i][1] = listOfEmployeeAccounts.get(i).getPassword();
            twoDimensionalArrayForTables[i][2] = listOfEmployeeAccounts.get(i).getPersonal_no();
        }
        stringArrayforTables = new String[]{"Username", "Password", "EmployeeID"};
        jTableEmployeesAccounts.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableEmployeesAccounts.getTableHeader().setReorderingAllowed(false);

        ArrayList<User> listOfGuestAccounts = control.getAllGuestAccounts();
        twoDimensionalArrayForTables = new Object[listOfGuestAccounts.size()][3];
        for (int i = 0; i < listOfGuestAccounts.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfGuestAccounts.get(i).getUsername();
            twoDimensionalArrayForTables[i][1] = listOfGuestAccounts.get(i).getPassword();
            twoDimensionalArrayForTables[i][2] = listOfGuestAccounts.get(i).getPersonal_no();
        }
        stringArrayforTables = new String[]{"Username", "Password", "ClientID"};
        jTableGuestsAccounts.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableGuestsAccounts.getTableHeader().setReorderingAllowed(false);
    }

    private void lockingInLayeredPaneSportBookingByClients() {
        jButtonCreateBookingByClient.setEnabled(false);
        jButtonUpdateBookingByClient.setEnabled(false);
        jButtonDeleteBookingByClient.setEnabled(false);
        jButtonExecuteSportBookingByClient.setEnabled(true);
    }

    private void fillingInLayeredPaneSportBookingByClient() {
        ArrayList<SportBooking> listOfSportBookingByClient = control.getAllSportBookingsByClient();
        String arrayOfSportBookingNo[] = new String[listOfSportBookingByClient.size()];
        twoDimensionalArrayForTables = new Object[listOfSportBookingByClient.size()][6];
        for (int i = 0; i < listOfSportBookingByClient.size(); i++) {
            twoDimensionalArrayForTables[i][0] = listOfSportBookingByClient.get(i).getSportBooking_no();
            twoDimensionalArrayForTables[i][1] = listOfSportBookingByClient.get(i).getClient_no();
            twoDimensionalArrayForTables[i][2] = listOfSportBookingByClient.get(i).getField_no();
            twoDimensionalArrayForTables[i][3] = listOfSportBookingByClient.get(i).getSportBooking_Date();
            twoDimensionalArrayForTables[i][4] = listOfSportBookingByClient.get(i).getSportBooking_Hour();
            twoDimensionalArrayForTables[i][5] = listOfSportBookingByClient.get(i).getInstructor_no();
            arrayOfSportBookingNo[i] = listOfSportBookingByClient.get(i).getSportBooking_no() + "";
        }
        jComboBoxBookingNoSportBookingByClients.setModel(new DefaultComboBoxModel(arrayOfSportBookingNo));

        ArrayList<Field> allFields = control.getAllFields();
        String arrayOfFieldNumbers[] = new String[allFields.size()];
        for (int i = 0; i < allFields.size(); i++) {
            arrayOfFieldNumbers[i] = allFields.get(i).getField_no() + "";
        }

        ArrayList<Employee> allEmployees = control.getAllEmployees();
        String arrayOfEmployeeNumbers[] = new String[allEmployees.size()];
        for (int i = 0; i < allEmployees.size(); i++) {
            arrayOfEmployeeNumbers[i] = allEmployees.get(i).getEmployee_no() + "";
        }
        stringArrayforTables = new String[]{"Booking Number", "Client Number", "Field Number", "Booking Date", "Booking Hour", "Instructor Number"};
        jTableSportBookingForClient.setModel(new CustomModel(twoDimensionalArrayForTables, stringArrayforTables));
        jTableSportBookingForClient.getTableHeader().setReorderingAllowed(false);
        jComboBoxFieldNoSportBookingByClient.setModel(new DefaultComboBoxModel(arrayOfFieldNumbers));
        jComboBoxInstructorNoSportBookingByClient.setModel(new DefaultComboBoxModel(arrayOfEmployeeNumbers));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Casablanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Casablanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Casablanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Casablanca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Casablanca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAccountManagementCreate;
    private javax.swing.JButton jButtonAccountManagementDelete;
    private javax.swing.JButton jButtonAccountManagementExecute;
    private javax.swing.JButton jButtonAddReservation;
    private javax.swing.JButton jButtonChangeReservation;
    private javax.swing.JButton jButtonCheckPassport;
    private javax.swing.JButton jButtonCreateBookingByClient;
    private javax.swing.JButton jButtonDeleteBookingByClient;
    private javax.swing.JButton jButtonDeleteReservation;
    private javax.swing.JButton jButtonEmployeeCreation;
    private javax.swing.JButton jButtonEmployeeDeletion;
    private javax.swing.JButton jButtonEmployeeExecute;
    private javax.swing.JButton jButtonEmployeeUpdating;
    private javax.swing.JButton jButtonExecuteSportBookingByClient;
    private javax.swing.JButton jButtonFieldCreation;
    private javax.swing.JButton jButtonFieldDeletion;
    private javax.swing.JButton jButtonFieldExecute;
    private javax.swing.JButton jButtonFieldUpdating;
    private javax.swing.JButton jButtonLogIn;
    private javax.swing.JButton jButtonNewReservationAfterCheckingFreeRoomsInASpecificPeriod;
    private javax.swing.JButton jButtonReservationDone;
    private javax.swing.JButton jButtonShowGuestInfo;
    private javax.swing.JButton jButtonSportBookingCreation;
    private javax.swing.JButton jButtonSportBookingDelete;
    private javax.swing.JButton jButtonSportBookingExecute;
    private javax.swing.JButton jButtonSportBookingUpdate;
    private javax.swing.JButton jButtonSportCreation;
    private javax.swing.JButton jButtonSportDeletion;
    private javax.swing.JButton jButtonSportExecute;
    private javax.swing.JButton jButtonSportInstructorCreate;
    private javax.swing.JButton jButtonSportInstructorDelete;
    private javax.swing.JButton jButtonSportInstructorExecute;
    private javax.swing.JButton jButtonSportInstructorUpdate;
    private javax.swing.JButton jButtonSportUpdating;
    private javax.swing.JButton jButtonUpdateBookingByClient;
    private javax.swing.JButton jButtonUpdateClient;
    private javax.swing.JCheckBox jCheckBoxDepositPayed;
    private javax.swing.JCheckBox jCheckBoxDepositPayedUpdate;
    private javax.swing.JComboBox jComboBoxAccountManagementID;
    private javax.swing.JComboBox jComboBoxAccountType;
    private javax.swing.JComboBox jComboBoxBookingHour;
    private javax.swing.JComboBox jComboBoxBookingHourSportBookingByClient;
    private javax.swing.JComboBox jComboBoxBookingNoSportBookingByClients;
    private javax.swing.JComboBox jComboBoxChangeEmailClient;
    private javax.swing.JComboBox jComboBoxCountry;
    private javax.swing.JComboBox jComboBoxEmail;
    private javax.swing.JComboBox jComboBoxEmployeeNo;
    private javax.swing.JComboBox jComboBoxEmployeePosition;
    private javax.swing.JComboBox jComboBoxFieldNoSportBookingByClient;
    private javax.swing.JComboBox jComboBoxFieldsNo;
    private javax.swing.JComboBox jComboBoxGuestsNumber;
    private javax.swing.JComboBox jComboBoxInstructorNoSportBookingByClient;
    private javax.swing.JComboBox jComboBoxPassports;
    private javax.swing.JComboBox jComboBoxRoomType;
    private javax.swing.JComboBox jComboBoxRoomTypeChooser;
    private javax.swing.JComboBox jComboBoxSportBookingBookingNo;
    private javax.swing.JComboBox jComboBoxSportBookingClientNo;
    private javax.swing.JComboBox jComboBoxSportBookingFieldNo;
    private javax.swing.JComboBox jComboBoxSportBookingInstructorNo;
    private javax.swing.JComboBox jComboBoxSportInstructorEmployeeNo;
    private javax.swing.JComboBox jComboBoxSportInstructorPrice;
    private javax.swing.JComboBox jComboBoxSportInstructorSequence;
    private javax.swing.JComboBox jComboBoxSportInstructorSportName;
    private javax.swing.JComboBox jComboBoxSportName;
    private javax.swing.JComboBox jComboBoxSportNameInjMenuItemField;
    private javax.swing.JLabel jLabeEmployeeNo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelAdditionalInfo;
    private javax.swing.JLabel jLabelBookingNoSportBookingByClient;
    private javax.swing.JLabel jLabelEmployeeNo1;
    private javax.swing.JLabel jLabelErrorMessageReservation;
    private javax.swing.JLabel jLabelFieldName;
    private javax.swing.JLabel jLabelFieldNo;
    private javax.swing.JLabel jLabelSportBookingNo;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPaneAccounts;
    private javax.swing.JLayeredPane jLayeredPaneEmployee;
    private javax.swing.JLayeredPane jLayeredPaneFields;
    private javax.swing.JLayeredPane jLayeredPaneFreeRooms;
    private javax.swing.JLayeredPane jLayeredPaneMain;
    private javax.swing.JLayeredPane jLayeredPaneNewReservation;
    private javax.swing.JLayeredPane jLayeredPaneReservations;
    private javax.swing.JLayeredPane jLayeredPaneShowingGuestInformation;
    private javax.swing.JLayeredPane jLayeredPaneSportBooking;
    private javax.swing.JLayeredPane jLayeredPaneSportBookingGuest;
    private javax.swing.JLayeredPane jLayeredPaneSportInstructor;
    private javax.swing.JLayeredPane jLayeredPaneSports;
    private javax.swing.JList jListFreeRooms;
    private javax.swing.JList jListRooms;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuClientsRequests;
    private javax.swing.JMenu jMenuFacilitiesAdministration;
    private javax.swing.JMenu jMenuHome;
    private javax.swing.JMenu jMenuHotelAdministration;
    private javax.swing.JMenuItem jMenuItemAccounts;
    private javax.swing.JMenuItem jMenuItemClientInformation;
    private javax.swing.JMenuItem jMenuItemEmployee;
    private javax.swing.JMenuItem jMenuItemFields;
    private javax.swing.JMenuItem jMenuItemFreeRooms;
    private javax.swing.JMenuItem jMenuItemNewReservation;
    private javax.swing.JMenuItem jMenuItemReservation;
    private javax.swing.JMenuItem jMenuItemSportBooking;
    private javax.swing.JMenuItem jMenuItemSportBookingClient;
    private javax.swing.JMenuItem jMenuItemSportInstructor;
    private javax.swing.JMenuItem jMenuItemSports;
    private javax.swing.JMenu jMenuSportBooking;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerStayingPeriod;
    private javax.swing.JTable jTableActualSports;
    private javax.swing.JTable jTableClients;
    private javax.swing.JTable jTableEmployee;
    private javax.swing.JTable jTableEmployeesAccounts;
    private javax.swing.JTable jTableGuestsAccounts;
    private javax.swing.JTable jTableReservations;
    private javax.swing.JTable jTableSportBooking;
    private javax.swing.JTable jTableSportBookingForClient;
    private javax.swing.JTable jTableSportFields;
    private javax.swing.JTable jTableSportInstructor;
    private javax.swing.JTextField jTextFieldAccountManagementID;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldAgency;
    private javax.swing.JTextField jTextFieldBookingHourSportBookingByClient;
    private javax.swing.JTextField jTextFieldBookingNoSportBookingByClient;
    private javax.swing.JTextField jTextFieldClientID;
    private javax.swing.JTextField jTextFieldClientIDReservation;
    private javax.swing.JTextField jTextFieldClientNoSportBookingByClient;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldEmployeeName;
    private javax.swing.JTextField jTextFieldEmployeeNo;
    private javax.swing.JTextField jTextFieldEmployeePosition;
    private javax.swing.JTextField jTextFieldFieldNewName;
    private javax.swing.JTextField jTextFieldFieldNo;
    private javax.swing.JTextField jTextFieldFieldNoSportBookingByClient;
    private javax.swing.JTextField jTextFieldInstructorNoSportBookingByClient;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldNewAddress;
    private javax.swing.JTextField jTextFieldNewAgency;
    private javax.swing.JTextField jTextFieldNewCountry;
    private javax.swing.JTextField jTextFieldNewEmail;
    private javax.swing.JTextField jTextFieldNewName;
    private javax.swing.JTextField jTextFieldNewPassport;
    private javax.swing.JTextField jTextFieldNewPhone;
    private javax.swing.JTextField jTextFieldNewSurname;
    private javax.swing.JTextField jTextFieldPassport;
    private javax.swing.JTextField jTextFieldPassword;
    private javax.swing.JTextField jTextFieldPhone;
    private javax.swing.JTextField jTextFieldReservationID;
    private javax.swing.JTextField jTextFieldRoomReservation;
    private javax.swing.JTextField jTextFieldSportBookingBookingHour;
    private javax.swing.JTextField jTextFieldSportBookingBookingNo;
    private javax.swing.JTextField jTextFieldSportBookingClientNo;
    private javax.swing.JTextField jTextFieldSportBookingFieldNo;
    private javax.swing.JTextField jTextFieldSportBookingInstructorNo;
    private javax.swing.JTextField jTextFieldSportInstructorEmployeeNo;
    private javax.swing.JTextField jTextFieldSportInstructorPrice;
    private javax.swing.JTextField jTextFieldSportInstructorSequence;
    private javax.swing.JTextField jTextFieldSportInstructorSportName;
    private javax.swing.JTextField jTextFieldSportMaxPPL;
    private javax.swing.JTextField jTextFieldSportMinPPL;
    private javax.swing.JTextField jTextFieldSportName;
    private javax.swing.JTextField jTextFieldSurname;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables
    private DefaultListModel freerooms = new DefaultListModel();
}
